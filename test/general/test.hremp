# 1 "<stdin>"
# 12 "<stdin>"




# 1 "include/mbedtls/config.h" 1
# 29 "include/mbedtls/config.h"






# 61 "include/mbedtls/config.h"

# 135 "include/mbedtls/config.h"

# 147 "include/mbedtls/config.h"

# 528 "include/mbedtls/config.h"





























# 602 "include/mbedtls/config.h"




# 636 "include/mbedtls/config.h"

# 646 "include/mbedtls/config.h"













# 669 "include/mbedtls/config.h"

# 683 "include/mbedtls/config.h"

# 705 "include/mbedtls/config.h"

# 736 "include/mbedtls/config.h"

# 756 "include/mbedtls/config.h"

# 781 "include/mbedtls/config.h"

# 809 "include/mbedtls/config.h"

# 842 "include/mbedtls/config.h"

# 867 "include/mbedtls/config.h"

# 891 "include/mbedtls/config.h"

# 915 "include/mbedtls/config.h"

# 939 "include/mbedtls/config.h"

# 972 "include/mbedtls/config.h"

# 987 "include/mbedtls/config.h"

# 996 "include/mbedtls/config.h"








# 1105 "include/mbedtls/config.h"

# 1116 "include/mbedtls/config.h"

# 1127 "include/mbedtls/config.h"

# 1145 "include/mbedtls/config.h"

# 1175 "include/mbedtls/config.h"

# 1220 "include/mbedtls/config.h"

# 1238 "include/mbedtls/config.h"

# 1255 "include/mbedtls/config.h"

# 1277 "include/mbedtls/config.h"

# 1299 "include/mbedtls/config.h"

# 1328 "include/mbedtls/config.h"

# 1352 "include/mbedtls/config.h"

# 1364 "include/mbedtls/config.h"

# 1376 "include/mbedtls/config.h"

# 1391 "include/mbedtls/config.h"

# 1400 "include/mbedtls/config.h"

# 1415 "include/mbedtls/config.h"

# 1433 "include/mbedtls/config.h"

# 1449 "include/mbedtls/config.h"

# 1460 "include/mbedtls/config.h"

# 1474 "include/mbedtls/config.h"

# 1484 "include/mbedtls/config.h"

# 1495 "include/mbedtls/config.h"

# 1504 "include/mbedtls/config.h"

# 1563 "include/mbedtls/config.h"

# 1599 "include/mbedtls/config.h"

# 1612 "include/mbedtls/config.h"

# 1622 "include/mbedtls/config.h"

# 1669 "include/mbedtls/config.h"

# 1744 "include/mbedtls/config.h"

# 1772 "include/mbedtls/config.h"

# 1786 "include/mbedtls/config.h"

# 1800 "include/mbedtls/config.h"

# 1812 "include/mbedtls/config.h"

# 1829 "include/mbedtls/config.h"

# 1838 "include/mbedtls/config.h"

# 1893 "include/mbedtls/config.h"

# 1959 "include/mbedtls/config.h"

# 1971 "include/mbedtls/config.h"

# 1980 "include/mbedtls/config.h"

# 1991 "include/mbedtls/config.h"

# 2003 "include/mbedtls/config.h"

# 2030 "include/mbedtls/config.h"

# 2044 "include/mbedtls/config.h"

# 2073 "include/mbedtls/config.h"

# 2094 "include/mbedtls/config.h"

# 2110 "include/mbedtls/config.h"

# 2125 "include/mbedtls/config.h"

# 2158 "include/mbedtls/config.h"

# 2172 "include/mbedtls/config.h"

# 2184 "include/mbedtls/config.h"

# 2198 "include/mbedtls/config.h"

# 2236 "include/mbedtls/config.h"

# 2250 "include/mbedtls/config.h"

# 2275 "include/mbedtls/config.h"

# 2331 "include/mbedtls/config.h"

# 2366 "include/mbedtls/config.h"

# 2389 "include/mbedtls/config.h"

# 2403 "include/mbedtls/config.h"

# 2421 "include/mbedtls/config.h"

# 2437 "include/mbedtls/config.h"

# 2453 "include/mbedtls/config.h"

# 2468 "include/mbedtls/config.h"

# 2482 "include/mbedtls/config.h"

# 2495 "include/mbedtls/config.h"

# 2526 "include/mbedtls/config.h"

# 2546 "include/mbedtls/config.h"

# 2556 "include/mbedtls/config.h"

# 2567 "include/mbedtls/config.h"

# 2586 "include/mbedtls/config.h"

# 2608 "include/mbedtls/config.h"

# 2625 "include/mbedtls/config.h"

# 2640 "include/mbedtls/config.h"

# 2652 "include/mbedtls/config.h"

# 2662 "include/mbedtls/config.h"

# 2674 "include/mbedtls/config.h"

# 2688 "include/mbedtls/config.h"

# 2702 "include/mbedtls/config.h"

# 2718 "include/mbedtls/config.h"

# 2763 "include/mbedtls/config.h"

# 2774 "include/mbedtls/config.h"

# 2791 "include/mbedtls/config.h"

# 2807 "include/mbedtls/config.h"

# 2821 "include/mbedtls/config.h"

# 2835 "include/mbedtls/config.h"

# 2848 "include/mbedtls/config.h"

# 2861 "include/mbedtls/config.h"

# 2874 "include/mbedtls/config.h"

# 2884 "include/mbedtls/config.h"

# 3081 "include/mbedtls/config.h"

# 3108 "include/mbedtls/config.h"

#include YOTTA_CFG_MBEDTLS_TARGET_CONFIG_FILE

# 3119 "include/mbedtls/config.h"

#include YOTTA_CFG_MBEDTLS_USER_CONFIG_FILE

#include MBEDTLS_USER_CONFIG_FILE



# 17 "<stdin>" 2

#include MBEDTLS_CONFIG_FILE



# 1 "include/mbedtls/ecp.h" 1
# 36 "include/mbedtls/ecp.h"



# 1 "include/mbedtls/bignum.h" 1
# 24 "include/mbedtls/bignum.h"




# 1 "include/mbedtls/config.h" 1
# 29 "include/mbedtls/bignum.h" 2

#include MBEDTLS_CONFIG_FILE


#include <stddef.h>
#include <stdint.h>


#include <stdio.h>



















# 66 "include/mbedtls/bignum.h"















# 100 "include/mbedtls/bignum.h"



# 114 "include/mbedtls/bignum.h"

    #if defined(_MSC_VER) && defined(_M_AMD64)

        #if !defined(MBEDTLS_HAVE_INT64)
            #define MBEDTLS_HAVE_INT64
        #endif
        typedef int64_t mbedtls_mpi_sint;
        typedef uint64_t mbedtls_mpi_uint;
    #elif defined(__GNUC__) && ( \
        defined(__amd64__) || defined(__x86_64__) || \
        defined(__ppc64__) || defined(__powerpc64__) || \
        defined(__ia64__) || defined(__alpha__) || \
        ( defined(__sparc__) && defined(__arch64__) ) || \
        defined(__s390x__) || defined(__mips64) )
        #if !defined(MBEDTLS_HAVE_INT64)
            #define MBEDTLS_HAVE_INT64
        #endif
        typedef int64_t mbedtls_mpi_sint;
        typedef uint64_t mbedtls_mpi_uint;


            typedef unsigned int mbedtls_t_udbl __attribute__((mode(TI)));


    #elif defined(__ARMCC_VERSION) && defined(__aarch64__)




        #if !defined(MBEDTLS_HAVE_INT64)
            #define MBEDTLS_HAVE_INT64
        #endif
        typedef int64_t mbedtls_mpi_sint;
        typedef uint64_t mbedtls_mpi_uint;


            typedef __uint128_t mbedtls_t_udbl;


    #elif defined(MBEDTLS_HAVE_INT64)

        typedef int64_t mbedtls_mpi_sint;
        typedef uint64_t mbedtls_mpi_uint;
    #endif


#if !defined(MBEDTLS_HAVE_INT64)




    typedef int32_t mbedtls_mpi_sint;
    typedef uint32_t mbedtls_mpi_uint;

        typedef uint64_t mbedtls_t_udbl;


#endif


extern "C" {





typedef struct mbedtls_mpi
{
    int s;
    size_t n;
    mbedtls_mpi_uint *p;
}
mbedtls_mpi;
# 195 "include/mbedtls/bignum.h"
void mbedtls_mpi_init( mbedtls_mpi *X );






void mbedtls_mpi_free( mbedtls_mpi *X );
# 215 "include/mbedtls/bignum.h"
int mbedtls_mpi_grow( mbedtls_mpi *X, size_t nblimbs );
# 230 "include/mbedtls/bignum.h"
int mbedtls_mpi_shrink( mbedtls_mpi *X, size_t nblimbs );
# 241 "include/mbedtls/bignum.h"
int mbedtls_mpi_copy( mbedtls_mpi *X, const mbedtls_mpi *Y );







void mbedtls_mpi_swap( mbedtls_mpi *X, mbedtls_mpi *Y );
# 268 "include/mbedtls/bignum.h"
int mbedtls_mpi_safe_cond_assign( mbedtls_mpi *X, const mbedtls_mpi *Y, unsigned char assign );
# 287 "include/mbedtls/bignum.h"
int mbedtls_mpi_safe_cond_swap( mbedtls_mpi *X, mbedtls_mpi *Y, unsigned char assign );
# 298 "include/mbedtls/bignum.h"
int mbedtls_mpi_lset( mbedtls_mpi *X, mbedtls_mpi_sint z );
# 308 "include/mbedtls/bignum.h"
int mbedtls_mpi_get_bit( const mbedtls_mpi *X, size_t pos );
# 324 "include/mbedtls/bignum.h"
int mbedtls_mpi_set_bit( mbedtls_mpi *X, size_t pos, unsigned char val );
# 334 "include/mbedtls/bignum.h"
size_t mbedtls_mpi_lsb( const mbedtls_mpi *X );
# 344 "include/mbedtls/bignum.h"
size_t mbedtls_mpi_bitlen( const mbedtls_mpi *X );






size_t mbedtls_mpi_size( const mbedtls_mpi *X );
# 362 "include/mbedtls/bignum.h"
int mbedtls_mpi_read_string( mbedtls_mpi *X, int radix, const char *s );
# 380 "include/mbedtls/bignum.h"
int mbedtls_mpi_write_string( const mbedtls_mpi *X, int radix,
                              char *buf, size_t buflen, size_t *olen );


# 404 "include/mbedtls/bignum.h"
int mbedtls_mpi_read_file( mbedtls_mpi *X, int radix, FILE *fin );
# 418 "include/mbedtls/bignum.h"
int mbedtls_mpi_write_file( const char *p, const mbedtls_mpi *X, int radix, FILE *fout );

# 431 "include/mbedtls/bignum.h"
int mbedtls_mpi_read_binary( mbedtls_mpi *X, const unsigned char *buf, size_t buflen );
# 445 "include/mbedtls/bignum.h"
int mbedtls_mpi_write_binary( const mbedtls_mpi *X, unsigned char *buf, size_t buflen );
# 456 "include/mbedtls/bignum.h"
int mbedtls_mpi_shift_l( mbedtls_mpi *X, size_t count );
# 467 "include/mbedtls/bignum.h"
int mbedtls_mpi_shift_r( mbedtls_mpi *X, size_t count );
# 479 "include/mbedtls/bignum.h"
int mbedtls_mpi_cmp_abs( const mbedtls_mpi *X, const mbedtls_mpi *Y );
# 491 "include/mbedtls/bignum.h"
int mbedtls_mpi_cmp_mpi( const mbedtls_mpi *X, const mbedtls_mpi *Y );
# 503 "include/mbedtls/bignum.h"
int mbedtls_mpi_cmp_int( const mbedtls_mpi *X, mbedtls_mpi_sint z );
# 515 "include/mbedtls/bignum.h"
int mbedtls_mpi_add_abs( mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *B );
# 527 "include/mbedtls/bignum.h"
int mbedtls_mpi_sub_abs( mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *B );
# 539 "include/mbedtls/bignum.h"
int mbedtls_mpi_add_mpi( mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *B );
# 551 "include/mbedtls/bignum.h"
int mbedtls_mpi_sub_mpi( mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *B );
# 563 "include/mbedtls/bignum.h"
int mbedtls_mpi_add_int( mbedtls_mpi *X, const mbedtls_mpi *A, mbedtls_mpi_sint b );
# 575 "include/mbedtls/bignum.h"
int mbedtls_mpi_sub_int( mbedtls_mpi *X, const mbedtls_mpi *A, mbedtls_mpi_sint b );
# 587 "include/mbedtls/bignum.h"
int mbedtls_mpi_mul_mpi( mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *B );
# 601 "include/mbedtls/bignum.h"
int mbedtls_mpi_mul_int( mbedtls_mpi *X, const mbedtls_mpi *A, mbedtls_mpi_uint b );
# 617 "include/mbedtls/bignum.h"
int mbedtls_mpi_div_mpi( mbedtls_mpi *Q, mbedtls_mpi *R, const mbedtls_mpi *A, const mbedtls_mpi *B );
# 633 "include/mbedtls/bignum.h"
int mbedtls_mpi_div_int( mbedtls_mpi *Q, mbedtls_mpi *R, const mbedtls_mpi *A, mbedtls_mpi_sint b );
# 647 "include/mbedtls/bignum.h"
int mbedtls_mpi_mod_mpi( mbedtls_mpi *R, const mbedtls_mpi *A, const mbedtls_mpi *B );
# 661 "include/mbedtls/bignum.h"
int mbedtls_mpi_mod_int( mbedtls_mpi_uint *r, const mbedtls_mpi *A, mbedtls_mpi_sint b );
# 681 "include/mbedtls/bignum.h"
int mbedtls_mpi_exp_mod( mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *E, const mbedtls_mpi *N, mbedtls_mpi *_RR );
# 698 "include/mbedtls/bignum.h"
int mbedtls_mpi_fill_random( mbedtls_mpi *X, size_t size,
                     int (*f_rng)(void *, unsigned char *, size_t),
                     void *p_rng );
# 712 "include/mbedtls/bignum.h"
int mbedtls_mpi_gcd( mbedtls_mpi *G, const mbedtls_mpi *A, const mbedtls_mpi *B );
# 726 "include/mbedtls/bignum.h"
int mbedtls_mpi_inv_mod( mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *N );
# 739 "include/mbedtls/bignum.h"
int mbedtls_mpi_is_prime( const mbedtls_mpi *X,
                  int (*f_rng)(void *, unsigned char *, size_t),
                  void *p_rng );
# 757 "include/mbedtls/bignum.h"
int mbedtls_mpi_gen_prime( mbedtls_mpi *X, size_t nbits, int dh_flag,
                   int (*f_rng)(void *, unsigned char *, size_t),
                   void *p_rng );






int mbedtls_mpi_self_test( int verbose );


}



# 40 "include/mbedtls/ecp.h" 2















extern "C" {

# 67 "include/mbedtls/ecp.h"
typedef enum
{
    MBEDTLS_ECP_DP_NONE = 0,
    MBEDTLS_ECP_DP_SECP192R1,
    MBEDTLS_ECP_DP_SECP224R1,
    MBEDTLS_ECP_DP_SECP256R1,
    MBEDTLS_ECP_DP_SECP384R1,
    MBEDTLS_ECP_DP_SECP521R1,
    MBEDTLS_ECP_DP_BP256R1,
    MBEDTLS_ECP_DP_BP384R1,
    MBEDTLS_ECP_DP_BP512R1,
    MBEDTLS_ECP_DP_CURVE25519,
    MBEDTLS_ECP_DP_SECP192K1,
    MBEDTLS_ECP_DP_SECP224K1,
    MBEDTLS_ECP_DP_SECP256K1,
    MBEDTLS_ECP_DP_CURVE448,
} mbedtls_ecp_group_id;











typedef struct mbedtls_ecp_curve_info
{
    mbedtls_ecp_group_id grp_id;
    uint16_t tls_id;
    uint16_t bit_size;
    const char *name;
} mbedtls_ecp_curve_info;
# 114 "include/mbedtls/ecp.h"
typedef struct mbedtls_ecp_point
{
    mbedtls_mpi X;
    mbedtls_mpi Y;
    mbedtls_mpi Z;
}
mbedtls_ecp_point;


# 159 "include/mbedtls/ecp.h"
typedef struct mbedtls_ecp_group
{
    mbedtls_ecp_group_id id;
    mbedtls_mpi P;
    mbedtls_mpi A;

    mbedtls_mpi B;

    mbedtls_ecp_point G;
    mbedtls_mpi N;
    size_t pbits;
    size_t nbits;


    unsigned int h;
    int (*modp)(mbedtls_mpi *);

    int (*t_pre)(mbedtls_ecp_point *, void *);
    int (*t_post)(mbedtls_ecp_point *, void *);
    void *t_data;
    mbedtls_ecp_point *T;
    size_t T_size;
}
mbedtls_ecp_group;
# 192 "include/mbedtls/ecp.h"











# 222 "include/mbedtls/ecp.h"




# 237 "include/mbedtls/ecp.h"






# 252 "include/mbedtls/ecp.h"
typedef struct mbedtls_ecp_keypair
{
    mbedtls_ecp_group grp;
    mbedtls_mpi d;
    mbedtls_ecp_point Q;
}
mbedtls_ecp_keypair;











# 278 "include/mbedtls/ecp.h"
const mbedtls_ecp_curve_info *mbedtls_ecp_curve_list( void );
# 288 "include/mbedtls/ecp.h"
const mbedtls_ecp_group_id *mbedtls_ecp_grp_id_list( void );
# 299 "include/mbedtls/ecp.h"
const mbedtls_ecp_curve_info *mbedtls_ecp_curve_info_from_grp_id( mbedtls_ecp_group_id grp_id );
# 310 "include/mbedtls/ecp.h"
const mbedtls_ecp_curve_info *mbedtls_ecp_curve_info_from_tls_id( uint16_t tls_id );
# 321 "include/mbedtls/ecp.h"
const mbedtls_ecp_curve_info *mbedtls_ecp_curve_info_from_name( const char *name );






void mbedtls_ecp_point_init( mbedtls_ecp_point *pt );
# 339 "include/mbedtls/ecp.h"
void mbedtls_ecp_group_init( mbedtls_ecp_group *grp );






void mbedtls_ecp_keypair_init( mbedtls_ecp_keypair *key );






void mbedtls_ecp_point_free( mbedtls_ecp_point *pt );





void mbedtls_ecp_group_free( mbedtls_ecp_group *grp );





void mbedtls_ecp_keypair_free( mbedtls_ecp_keypair *key );
# 377 "include/mbedtls/ecp.h"
int mbedtls_ecp_copy( mbedtls_ecp_point *P, const mbedtls_ecp_point *Q );
# 389 "include/mbedtls/ecp.h"
int mbedtls_ecp_group_copy( mbedtls_ecp_group *dst, const mbedtls_ecp_group *src );
# 399 "include/mbedtls/ecp.h"
int mbedtls_ecp_set_zero( mbedtls_ecp_point *pt );
# 409 "include/mbedtls/ecp.h"
int mbedtls_ecp_is_zero( mbedtls_ecp_point *pt );
# 423 "include/mbedtls/ecp.h"
int mbedtls_ecp_point_cmp( const mbedtls_ecp_point *P,
                           const mbedtls_ecp_point *Q );
# 438 "include/mbedtls/ecp.h"
int mbedtls_ecp_point_read_string( mbedtls_ecp_point *P, int radix,
                           const char *x, const char *y );
# 455 "include/mbedtls/ecp.h"
int mbedtls_ecp_point_write_binary( const mbedtls_ecp_group *grp, const mbedtls_ecp_point *P,
                            int format, size_t *olen,
                            unsigned char *buf, size_t buflen );
# 478 "include/mbedtls/ecp.h"
int mbedtls_ecp_point_read_binary( const mbedtls_ecp_group *grp, mbedtls_ecp_point *P,
                           const unsigned char *buf, size_t ilen );
# 496 "include/mbedtls/ecp.h"
int mbedtls_ecp_tls_read_point( const mbedtls_ecp_group *grp, mbedtls_ecp_point *pt,
                        const unsigned char **buf, size_t len );
# 514 "include/mbedtls/ecp.h"
int mbedtls_ecp_tls_write_point( const mbedtls_ecp_group *grp, const mbedtls_ecp_point *pt,
                         int format, size_t *olen,
                         unsigned char *buf, size_t blen );
# 534 "include/mbedtls/ecp.h"
int mbedtls_ecp_group_load( mbedtls_ecp_group *grp, mbedtls_ecp_group_id id );
# 550 "include/mbedtls/ecp.h"
int mbedtls_ecp_tls_read_group( mbedtls_ecp_group *grp, const unsigned char **buf, size_t len );
# 563 "include/mbedtls/ecp.h"
int mbedtls_ecp_tls_write_group( const mbedtls_ecp_group *grp, size_t *olen,
                         unsigned char *buf, size_t blen );
# 594 "include/mbedtls/ecp.h"
int mbedtls_ecp_mul( mbedtls_ecp_group *grp, mbedtls_ecp_point *R,
             const mbedtls_mpi *m, const mbedtls_ecp_point *P,
             int (*f_rng)(void *, unsigned char *, size_t), void *p_rng );
# 620 "include/mbedtls/ecp.h"
int mbedtls_ecp_muladd( mbedtls_ecp_group *grp, mbedtls_ecp_point *R,
             const mbedtls_mpi *m, const mbedtls_ecp_point *P,
             const mbedtls_mpi *n, const mbedtls_ecp_point *Q );
# 647 "include/mbedtls/ecp.h"
int mbedtls_ecp_check_pubkey( const mbedtls_ecp_group *grp, const mbedtls_ecp_point *pt );
# 664 "include/mbedtls/ecp.h"
int mbedtls_ecp_check_privkey( const mbedtls_ecp_group *grp, const mbedtls_mpi *d );
# 686 "include/mbedtls/ecp.h"
int mbedtls_ecp_gen_keypair_base( mbedtls_ecp_group *grp,
                     const mbedtls_ecp_point *G,
                     mbedtls_mpi *d, mbedtls_ecp_point *Q,
                     int (*f_rng)(void *, unsigned char *, size_t),
                     void *p_rng );
# 710 "include/mbedtls/ecp.h"
int mbedtls_ecp_gen_keypair( mbedtls_ecp_group *grp, mbedtls_mpi *d, mbedtls_ecp_point *Q,
                     int (*f_rng)(void *, unsigned char *, size_t),
                     void *p_rng );
# 726 "include/mbedtls/ecp.h"
int mbedtls_ecp_gen_key( mbedtls_ecp_group_id grp_id, mbedtls_ecp_keypair *key,
                int (*f_rng)(void *, unsigned char *, size_t), void *p_rng );
# 744 "include/mbedtls/ecp.h"
int mbedtls_ecp_check_pub_priv( const mbedtls_ecp_keypair *pub, const mbedtls_ecp_keypair *prv );









int mbedtls_ecp_self_test( int verbose );




}



# 23 "<stdin>" 2

#if defined(MBEDTLS_DEPRECATED_WARNING)

#endif


































union mbedtls_ssl_premaster_secret
{

    unsigned char _pms_rsa[48];


    unsigned char _pms_dhm[MBEDTLS_MPI_MAX_SIZE];

};




extern "C" {





typedef enum
{
    MBEDTLS_SSL_HELLO_REQUEST,
    MBEDTLS_SSL_CLIENT_HELLO,
}
mbedtls_ssl_states;
# 104 "<stdin>"
typedef int mbedtls_ssl_send_t( void *ctx,
                                const unsigned char *buf,
                                size_t len );


typedef struct mbedtls_ssl_session mbedtls_ssl_session;
typedef struct mbedtls_ssl_context mbedtls_ssl_context;
typedef struct mbedtls_ssl_config mbedtls_ssl_config;


typedef struct mbedtls_ssl_transform mbedtls_ssl_transform;
typedef struct mbedtls_ssl_handshake_params mbedtls_ssl_handshake_params;
typedef struct mbedtls_ssl_sig_hash_set_t mbedtls_ssl_sig_hash_set_t;

typedef struct mbedtls_ssl_key_cert mbedtls_ssl_key_cert;


typedef struct mbedtls_ssl_flight_item mbedtls_ssl_flight_item;






typedef int mbedtls_ssl_async_sign_t( mbedtls_ssl_context *ssl,
                                      const unsigned char *hash,
                                      size_t hash_len );






struct mbedtls_ssl_session
{


    int ciphersuite;
    size_t id_len;
    unsigned char id[32];
};




struct mbedtls_ssl_config
{






    const int *ciphersuite_list[4];


    void (*f_dbg)(void *, int, const char *, int, const char *);
    void *p_dbg;



    mbedtls_ssl_async_sign_t *f_async_sign_start;




    mbedtls_mpi dhm_P;



    const char **alpn_list;






    unsigned int endpoint : 1;
    unsigned int authmode : 2;
};


struct mbedtls_ssl_context
{
    const mbedtls_ssl_config *conf;




    int state;
};






extern int (*mbedtls_ssl_hw_record_init)(mbedtls_ssl_context *ssl,
                const unsigned char *key_enc, const unsigned char *key_dec,
                size_t maclen);

# 214 "<stdin>"
const char *mbedtls_ssl_get_ciphersuite_name( const int ciphersuite_id );
# 224 "<stdin>"
int mbedtls_ssl_get_ciphersuite_id( const char *ciphersuite_name );
# 233 "<stdin>"
void mbedtls_ssl_init( mbedtls_ssl_context *ssl );





int mbedtls_ssl_setup( mbedtls_ssl_context *ssl,
                       const mbedtls_ssl_config *conf );





void mbedtls_ssl_conf_verify( mbedtls_ssl_config *conf,
                     int (*f_vrfy)(void *, int, uint32_t *),
                     void *p_vrfy );






void mbedtls_ssl_set_bio( mbedtls_ssl_context *ssl,
                          void *p_bio,
                          mbedtls_ssl_send_t *f_send );

typedef int mbedtls_ssl_cookie_write_t( void *ctx,
                                unsigned char **p, unsigned char *end,
                                const unsigned char *info, size_t ilen );




#if defined(MBEDTLS_DEPRECATED_WARNING)
#define MBEDTLS_DEPRECATED __attribute__((deprecated))
#else
#define MBEDTLS_DEPRECATED
#endif
# 285 "<stdin>"
MBEDTLS_DEPRECATED int mbedtls_ssl_conf_dh_param( mbedtls_ssl_config *conf,
                                                  const char *dhm_P,
                                                  const char *dhm_G );




}



