cogent_fac1 : U32 -> U32
cogent_fac1 v =
   let r' = let v2' = let v' = 42
         and v1' = v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fac2 : U8 -> U8
cogent_fac2 v =
   let r' = let v2' = let v' = 'x'
         and v1' = v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fac4 : String -> String
cogent_fac4 v =
   let r' = let v2' = let v' = "abc"
         and v1' = v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fac5 : err-float -> err-float
cogent_fac5 v =
   let r' = let v2' = let v' = gencotDummy "Float literals not supported"
            {- 1.5; -}
         and v1' = v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fav1 : ( U32, U32 ) -> U32
cogent_fav1 (v, w) =
   let r' = let v2' = let v' = w
         and v1' = v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fav2 : ( U32, U32 ) -> U32
cogent_fav2 (xyz_123, w) =
   let r' = let v2' = let v' = w
         and v1' = v'
         and xyz_123 = v1'
         and v2' = xyz_123
         in v2'
      in v2'
   in r'
cogent_fao1 : U32 -> U32
cogent_fao1 v =
   let r' = let v2' = let v' = 42
         and v1' = v
         and v1' = v1' + v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fao2 : U32 -> U32
cogent_fao2 v =
   let r' = let v2' = let v' = 42
         and v1' = v
         and v1' = v1' - v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fao3 : U32 -> U32
cogent_fao3 v =
   let r' = let v2' = let v' = 42
         and v1' = v
         and v1' = v1' * v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fao4 : U32 -> U32
cogent_fao4 v =
   let r' = let v2' = let v' = 42
         and v1' = v
         and v1' = v1' / v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fao5 : U32 -> U32
cogent_fao5 v =
   let r' = let v2' = let v' = 42
         and v1' = v
         and v1' = v1' % v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fao6 : U32 -> U32
cogent_fao6 v =
   let r' = let v2' = let v' = 4
         and v1' = v
         and v1' = v1' << v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fao7 : U32 -> U32
cogent_fao7 v =
   let r' = let v2' = let v' = 4
         and v1' = v
         and v1' = v1' >> v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fao8 : U32 -> U32
cogent_fao8 v =
   let r' = let v2' = let v' = 4
         and v1' = v
         and v1' = v1' .&. v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fao9 : U32 -> U32
cogent_fao9 v =
   let r' = let v2' = let v' = 4
         and v1' = v
         and v1' = v1' .|. v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fao10 : U32 -> U32
cogent_fao10 v =
   let r' = let v2' = let v' = 4
         and v1' = v
         and v1' = v1' .^. v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fao11 : U32 -> U32
cogent_fao11 v =
   let r' = let v1' = let v1' = v
         in v1'
      in v1'
   in r'
cogent_fao12 : U32 -> U32
cogent_fao12 v =
   let r' = let v1' = let v1' = v
         in v1'
      in v1'
   in r'
cogent_fao13 : U32 -> U32
cogent_fao13 v =
   let r' = let v1' = let v' = 1
         and v1' = v
         and v1' = v1' + v'
         and v1' = v1'
         in v1'
      in v1'
   in r'
cogent_fao14 : U32 -> U32
cogent_fao14 v =
   let r' = let v1' = let v' = 1
         and v1' = v
         and v1' = v1' - v'
         and v1' = v1'
         in v1'
      in v1'
   in r'

type Struct_Cogent_as1 = { m1 : U32, m2 : U32 }
type Struct_Cogent_as2 = { m3 : U32, m4 : #Struct_Cogent_as1 }
cogent_fas1 : ( #Struct_Cogent_as1, U32 ) -> U32
cogent_fas1 (s, v) =
   let r' = let v2' = let v' = s
         and s { m1 = p0' } = v'
         and v' = p0'
         and v1' = v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fas2 : ( #Struct_Cogent_as1, U32 ) -> U32
cogent_fas2 (s, v) =
   let r' = let v3' = let v' = s
         and s { m1 = p0' } = v'
         and v' = p0'
         and s = s { m1 = p0' }
         and v1' = s
         and s { m2 = p1' } = v1'
         and v1' = p1'
         and v' = v' + v1'
         and v2' = v'
         and v = v2'
         and v3' = v
         in v3'
      in v3'
   in r'
cogent_fas3 : ( #Struct_Cogent_as2, U32 ) -> U32
cogent_fas3 (s, v) =
   let r' = let v2' = let v' = s
         and s { m4 = p0' } = v'
         and v' = p0'
         and p0' { m1 = p1' } = v'
         and v' = p1'
         and v1' = v'
         and v = v1'
         and v2' = v
         in v2'
      in v2'
   in r'
cogent_fas4 : ( #Struct_Cogent_as2, U32 ) -> U32
cogent_fas4 (s, v) =
   let r' = let v4' = let v' = s
         and s { m4 = p0' } = v'
         and v' = p0'
         and p0' { m1 = p1' } = v'
         and v' = p1'
         and p0' = p0' { m1 = p1' }
         and s = s { m4 = p0' }
         and v1' = s
         and s { m4 = p2' } = v1'
         and v1' = p2'
         and p2' { m2 = p3' } = v1'
         and v1' = p3'
         and p2' = p2' { m2 = p3' }
         and s = s { m4 = p2' }
         and v' = v' + v1'
         and v2' = s
         and s { m3 = p4' } = v2'
         and v2' = p4'
         and v' = v' + v2'
         and v3' = v'
         and v = v3'
         and v4' = v
         in v4'
      in v4'
   in r'
cogent_fas5 : #Struct_Cogent_as1 -> U32
cogent_fas5 s =
   let r' = let v2' = let v' = 42
         and v1' = s
         and s { m1 = p0' } = v1'
         and v1' = v'
         and p0' = v1'
         and s = s { m1 = p0' }
         and v2' = s
         and s { m1 = p1' } = v2'
         and v2' = p1'
         in v2'
      in v2'
   in r'
cogent_fas6 : #Struct_Cogent_as2 -> U32
cogent_fas6 s =
   let r' = let v2' = let v' = 42
         and v1' = s
         and s { m4 = p0' } = v1'
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v1' = v'
         and p1' = v1'
         and p0' = p0' { m1 = p1' }
         and s = s { m4 = p0' }
         and v2' = s
         and s { m4 = p2' } = v2'
         and v2' = p2'
         and p2' { m1 = p3' } = v2'
         and v2' = p3'
         in v2'
      in v2'
   in r'
cogent_fas7 : #Struct_Cogent_as1 -> U32
cogent_fas7 s =
   let r' = let v1' = let v1' = s
         and s { m1 = p0' } = v1'
         and v1' = p0'
         in v1'
      in v1'
   in r'
cogent_fas8 : #Struct_Cogent_as2 -> U32
cogent_fas8 s =
   let r' = let v1' = let v1' = s
         and s { m4 = p0' } = v1'
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v1' = p1'
         in v1'
      in v1'
   in r'
cogent_fas9 : #Struct_Cogent_as1 -> U32
cogent_fas9 s =
   let r' = let v1' = let v' = 1
         and v1' = s
         and s { m1 = p0' } = v1'
         and v1' = p0'
         and v1' = v1' + v'
         and v1' = v1'
         in v1'
      in v1'
   in r'
cogent_fas10 : #Struct_Cogent_as2 -> U32
cogent_fas10 s =
   let r' = let v1' = let v' = 1
         and v1' = s
         and s { m4 = p0' } = v1'
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v1' = p1'
         and v1' = v1' + v'
         and v1' = v1'
         in v1'
      in v1'
   in r'

type Cogent_aa1 = CArr5 U32
type Cogent_aa2 =
   CArr5 #Struct_Cogent_as1
cogent_faa1 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa1 (a, v) =
   let (r', a) = let (v3'
                     , a) = let v1' = 3
         and v' = a
         and (a @{ @v1' = p0' }
             , i0') = (v', v1')
         and v' = p0'
         and a = a @{ @i0' = p0' }
         and v2' = v'
         and v = v2'
         and v3' = v
         in (v3', a)
      in (v3', a)
   in (r', a)
cogent_faa2 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa2 (a, v) =
   let (r', a) = let (v5'
                     , a) = let v1' = 3
         and v' = a
         and (a @{ @v1' = p0' }
             , i0') = (v', v1')
         and v' = p0'
         and a = a @{ @i0' = p0' }
         and v3' = 1
         and v2' = a
         and (a @{ @v3' = p1' }
             , i1') = (v2', v3')
         and v2' = p1'
         and a = a @{ @i1' = p1' }
         and v' = v' + v2'
         and v4' = v'
         and v = v4'
         and v5' = v
         in (v5', a)
      in (v5', a)
   in (r', a)
cogent_faa3 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa3 (a, v) =
   let (r', a) = let (v4'
                     , a) = let v2' = 2
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v1' = p0'
         and a = a @{ @i0' = p0' }
         and v' = a
         and (a @{ @v1' = p1' }
             , i1') = (v', v1')
         and v' = p1'
         and a = a @{ @i1' = p1' }
         and v3' = v'
         and v = v3'
         and v4' = v
         in (v4', a)
      in (v4', a)
   in (r', a)
cogent_faa4 : ( Cogent_aa2, U32 ) -> ( U32, Cogent_aa2 )
cogent_faa4 (a, v) =
   let (r', a) = let (v3'
                     , a) = let v1' = 3
         and v' = a
         and (a @{ @v1' = p0' }
             , i0') = (v', v1')
         and v' = p0'
         and p0' { m1 = p1' } = v'
         and v' = p1'
         and p0' = p0' { m1 = p1' }
         and a = a @{ @i0' = p0' }
         and v2' = v'
         and v = v2'
         and v3' = v
         in (v3', a)
      in (v3', a)
   in (r', a)
cogent_faa5 : ( Cogent_aa2, U32 ) -> ( U32, Cogent_aa2 )
cogent_faa5 (a, v) =
   let (r', a) = let (v4'
                     , a) = let v2' = 2
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v1' = p0'
         and p0' { m2 = p1' } = v1'
         and v1' = p1'
         and p0' = p0' { m2 = p1' }
         and a = a @{ @i0' = p0' }
         and v' = a
         and (a @{ @v1' = p2' }
             , i2') = (v', v1')
         and v' = p2'
         and p2' { m1 = p3' } = v'
         and v' = p3'
         and p2' = p2' { m1 = p3' }
         and a = a @{ @i2' = p2' }
         and v3' = v'
         and v = v3'
         and v4' = v
         in (v4', a)
      in (v4', a)
   in (r', a)
cogent_faa6 : Cogent_aa1 -> ( U32, Cogent_aa1 )
cogent_faa6 a =
   let (r', a) = let (v3'
                     , a) = let v' = 42
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v1' = v'
         and p0' = v1'
         and a = a @{ @i0' = p0' }
         and v4' = 3
         and v3' = a
         and (a @{ @v4' = p1' }
             , i1') = (v3', v4')
         and v3' = p1'
         and a = a @{ @i1' = p1' }
         in (v3', a)
      in (v3', a)
   in (r', a)
cogent_faa7 : Cogent_aa2 -> ( U32, Cogent_aa2 )
cogent_faa7 a =
   let (r', a) = let (v3'
                     , a) = let v' = 42
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v1' = v'
         and p1' = v1'
         and p0' = p0' { m1 = p1' }
         and a = a @{ @i0' = p0' }
         and v4' = 3
         and v3' = a
         and (a @{ @v4' = p2' }
             , i2') = (v3', v4')
         and v3' = p2'
         and p2' { m1 = p3' } = v3'
         and v3' = p3'
         and p2' = p2' { m1 = p3' }
         and a = a @{ @i2' = p2' }
         in (v3', a)
      in (v3', a)
   in (r', a)
cogent_faa8 : Cogent_aa1 -> ( U32, Cogent_aa1 )
cogent_faa8 a =
   let (r', a) = let (v1'
                     , a) = let v' = 1
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v1' = p0'
         and v1' = v1' + v'
         and (v1', p0') = (p0', v1')
         and a = a @{ @i0' = p0' }
         in (v1', a)
      in (v1', a)
   in (r', a)
cogent_faa9 : Cogent_aa2 -> ( U32, Cogent_aa2 )
cogent_faa9 a =
   let (r', a) = let (v1'
                     , a) = let v' = 1
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v1' = p1'
         and v1' = v1' + v'
         and (v1', p1') = (p1', v1')
         and p0' = p0' { m1 = p1' }
         and a = a @{ @i0' = p0' }
         in (v1', a)
      in (v1', a)
   in (r', a)
cogent_faa10 : Cogent_aa1 -> ( U32, Cogent_aa1 )
cogent_faa10 a =
   let (r', a) = let (v1'
                     , a) = let v' = 1
         and v3' = 2
         and v2' = a
         and (a @{ @v3' = p0' }
             , i0') = (v2', v3')
         and v2' = p0'
         and a = a @{ @i0' = p0' }
         and v1' = a
         and (a @{ @v2' = p1' }
             , i1') = (v1', v2')
         and v1' = p1'
         and v1' = v1' + v'
         and (v1', p1') = (p1', v1')
         and a = a @{ @i1' = p1' }
         in (v1', a)
      in (v1', a)
   in (r', a)
cogent_faa11 : Cogent_aa1 -> ( U32, Cogent_aa1 )
cogent_faa11 a =
   let (r', a) = let (v1'
                     , a) = let v' = 1
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v1' = p0'
         and v1' = v1' + v'
         and (v1', p0') = (v1', v1')
         and a = a @{ @i0' = p0' }
         in (v1', a)
      in (v1', a)
   in (r', a)
cogent_faa12 : Cogent_aa2 -> ( U32, Cogent_aa2 )
cogent_faa12 a =
   let (r', a) = let (v1'
                     , a) = let v' = 1
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v1' = p1'
         and v1' = v1' + v'
         and (v1', p1') = (v1', v1')
         and p0' = p0' { m1 = p1' }
         and a = a @{ @i0' = p0' }
         in (v1', a)
      in (v1', a)
   in (r', a)
cogent_faa13 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa13 (a, v) =
   let (r', a) = let (v'
                     , a) = let v2' = v
         and v' = a
         and (a @{ @v2' = p0' }
             , i0') = (v', v2')
         and v' = p0'
         and a = a @{ @i0' = p0' }
         in (v', a)
      in (v', a)
   in (r', a)
cogent_faa14 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa14 (a, v) =
   let (r', a) = let (v'
                     , a) = let v1' = 1
         and v2' = v
         and v2' = v2' + v1'
         and v2' = v2'
         and v' = a
         and (a @{ @v2' = p0' }
             , i0') = (v', v2')
         and v' = p0'
         and a = a @{ @i0' = p0' }
         in (v', a)
      in (v', a)
   in (r', a)

type Struct_Cogent_as3 = { m5 : U32, m6 : MayNull Struct_Cogent_as1 }
type Cogent_aa3 =
   CArr5 (MayNull (CPtr U32))
cogent_fap1 : ( MayNull (CPtr U32), U32 ) -> ( U32, MayNull (CPtr U32) )
cogent_fap1 (p, v) =
   let (r', p) = let (v2'
                     , p) = let v' = p
         and p { cont = p0' } = v'
         and v' = p0'
         and p = p { cont = p0' }
         and v1' = v'
         and v = v1'
         and v2' = v
         in (v2', p)
      in (v2', p)
   in (r', p)
cogent_fap2 : ( MayNull Struct_Cogent_as1, U32 ) -> ( U32, MayNull Struct_Cogent_as1 )
cogent_fap2 (p, v) =
   let (r', p) = let (v2'
                     , p) = let v' = p
         and p { cont = p0' } = v'
         and v' = p0'
         and p0' { m1 = p1' } = v'
         and v' = p1'
         and p0' = p0' { m1 = p1' }
         and p = p { cont = p0' }
         and v1' = v'
         and v = v1'
         and v2' = v
         in (v2', p)
      in (v2', p)
   in (r', p)
cogent_fap3 : ( MayNull Struct_Cogent_as1, U32 ) -> ( U32, MayNull Struct_Cogent_as1 )
cogent_fap3 (p, v) =
   let (r', p) = let (v2'
                     , p) = let v' = p
         and p { m1 = p0' } = v'
         and v' = p0'
         and p = p { m1 = p0' }
         and v1' = v'
         and v = v1'
         and v2' = v
         in (v2', p)
      in (v2', p)
   in (r', p)
cogent_fap4 : ( MayNull Struct_Cogent_as3, U32 ) -> ( U32, MayNull Struct_Cogent_as3 )
cogent_fap4 (p, v) =
   let (r', p) = let (v2'
                     , p) = let v' = p
         and p { m6 = p0' } = v'
         and v' = p0'
         and p0' { cont = p1' } = v'
         and v' = p1'
         and p1' { m1 = p2' } = v'
         and v' = p2'
         and p1' = p1' { m1 = p2' }
         and p0' = p0' { cont = p1' }
         and p = p { m6 = p0' }
         and v1' = v'
         and v = v1'
         and v2' = v
         in (v2', p)
      in (v2', p)
   in (r', p)
cogent_fap5 : ( MayNull Struct_Cogent_as3, U32 ) -> ( U32, MayNull Struct_Cogent_as3 )
cogent_fap5 (p, v) =
   let (r', p) = let (v2'
                     , p) = let v' = p
         and p { m6 = p0' } = v'
         and v' = p0'
         and p0' { m1 = p1' } = v'
         and v' = p1'
         and p0' = p0' { m1 = p1' }
         and p = p { m6 = p0' }
         and v1' = v'
         and v = v1'
         and v2' = v
         in (v2', p)
      in (v2', p)
   in (r', p)
cogent_fap6 : ( Cogent_aa3, U32 ) -> ( U32, Cogent_aa3 )
cogent_fap6 (p, v) =
   let (r', p) = let (v3'
                     , p) = let v1' = 3
         and v' = p
         and (p @{ @v1' = p0' }
             , i0') = (v', v1')
         and v' = p0'
         and p0' { cont = p1' } = v'
         and v' = p1'
         and p0' = p0' { cont = p1' }
         and p = p @{ @i0' = p0' }
         and v2' = v'
         and v = v2'
         and v3' = v
         in (v3', p)
      in (v3', p)
   in (r', p)
cogent_fap7 : MayNull (CPtr U32) -> ( U32, MayNull (CPtr U32) )
cogent_fap7 p =
   let (r', p) = let (v2'
                     , p) = let v' = 42
         and v1' = p
         and p { cont = p0' } = v1'
         and v1' = v'
         and p0' = v1'
         and p = p { cont = p0' }
         and v2' = p
         and p { cont = p1' } = v2'
         and v2' = p1'
         and p = p { cont = p1' }
         in (v2', p)
      in (v2', p)
   in (r', p)
cogent_fap8 : MayNull Struct_Cogent_as1 -> ( U32, MayNull Struct_Cogent_as1 )
cogent_fap8 p =
   let (r', p) = let (v2'
                     , p) = let v' = 42
         and v1' = p
         and p { cont = p0' } = v1'
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v1' = v'
         and p1' = v1'
         and p0' = p0' { m1 = p1' }
         and p = p { cont = p0' }
         and v2' = p
         and p { cont = p2' } = v2'
         and v2' = p2'
         and p2' { m1 = p3' } = v2'
         and v2' = p3'
         and p2' = p2' { m1 = p3' }
         and p = p { cont = p2' }
         in (v2', p)
      in (v2', p)
   in (r', p)
cogent_fap9 : MayNull Struct_Cogent_as1 -> ( U32, MayNull Struct_Cogent_as1 )
cogent_fap9 p =
   let (r', p) = let (v2'
                     , p) = let v' = 42
         and v1' = p
         and p { m1 = p0' } = v1'
         and v1' = v'
         and p0' = v1'
         and p = p { m1 = p0' }
         and v2' = p
         and p { m1 = p1' } = v2'
         and v2' = p1'
         and p = p { m1 = p1' }
         in (v2', p)
      in (v2', p)
   in (r', p)
cogent_fap10 : MayNull Struct_Cogent_as3 -> ( U32, MayNull Struct_Cogent_as3 )
cogent_fap10 p =
   let (r', p) = let (v2'
                     , p) = let v' = 42
         and v1' = p
         and p { m6 = p0' } = v1'
         and v1' = p0'
         and p0' { cont = p1' } = v1'
         and v1' = p1'
         and p1' { m1 = p2' } = v1'
         and v1' = v'
         and p2' = v1'
         and p1' = p1' { m1 = p2' }
         and p0' = p0' { cont = p1' }
         and p = p { m6 = p0' }
         and v2' = p
         and p { m6 = p3' } = v2'
         and v2' = p3'
         and p3' { cont = p4' } = v2'
         and v2' = p4'
         and p4' { m1 = p5' } = v2'
         and v2' = p5'
         and p4' = p4' { m1 = p5' }
         and p3' = p3' { cont = p4' }
         and p = p { m6 = p3' }
         in (v2', p)
      in (v2', p)
   in (r', p)
cogent_fap11 : MayNull Struct_Cogent_as3 -> ( U32, MayNull Struct_Cogent_as3 )
cogent_fap11 p =
   let (r', p) = let (v2'
                     , p) = let v' = 42
         and v1' = p
         and p { m6 = p0' } = v1'
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v1' = v'
         and p1' = v1'
         and p0' = p0' { m1 = p1' }
         and p = p { m6 = p0' }
         and v2' = p
         and p { m6 = p2' } = v2'
         and v2' = p2'
         and p2' { m1 = p3' } = v2'
         and v2' = p3'
         and p2' = p2' { m1 = p3' }
         and p = p { m6 = p2' }
         in (v2', p)
      in (v2', p)
   in (r', p)
cogent_fap12 : Cogent_aa3 -> ( U32, Cogent_aa3 )
cogent_fap12 p =
   let (r', p) = let (v3'
                     , p) = let v' = 42
         and v2' = 3
         and v1' = p
         and (p @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v1' = p0'
         and p0' { cont = p1' } = v1'
         and v1' = v'
         and p1' = v1'
         and p0' = p0' { cont = p1' }
         and p = p @{ @i0' = p0' }
         and v4' = 3
         and v3' = p
         and (p @{ @v4' = p2' }
             , i2') = (v3', v4')
         and v3' = p2'
         and p2' { cont = p3' } = v3'
         and v3' = p3'
         and p2' = p2' { cont = p3' }
         and p = p @{ @i2' = p2' }
         in (v3', p)
      in (v3', p)
   in (r', p)
cogent_fap13 : MayNull (CPtr U32) -> ( U32, MayNull (CPtr U32) )
cogent_fap13 p =
   let (r', p) = let (v1'
                     , p) = let v' = 1
         and v1' = p
         and p { cont = p0' } = v1'
         and v1' = p0'
         and v1' = v1' + v'
         and (v1', p0') = (p0', v1')
         and p = p { cont = p0' }
         in (v1', p)
      in (v1', p)
   in (r', p)
cogent_fap14 : MayNull Struct_Cogent_as1 -> ( U32, MayNull Struct_Cogent_as1 )
cogent_fap14 p =
   let (r', p) = let (v1'
                     , p) = let v' = 1
         and v1' = p
         and p { m1 = p0' } = v1'
         and v1' = p0'
         and v1' = v1' + v'
         and (v1', p0') = (p0', v1')
         and p = p { m1 = p0' }
         in (v1', p)
      in (v1', p)
   in (r', p)
cogent_fap15 : Cogent_aa3 -> ( U32, Cogent_aa3 )
cogent_fap15 p =
   let (r', p) = let (v1'
                     , p) = let v' = 1
         and v2' = 3
         and v1' = p
         and (p @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v1' = p0'
         and p0' { cont = p1' } = v1'
         and v1' = p1'
         and v1' = v1' + v'
         and (v1', p1') = (p1', v1')
         and p0' = p0' { cont = p1' }
         and p = p @{ @i0' = p0' }
         in (v1', p)
      in (v1', p)
   in (r', p)

cogent_fam1 : ( U32, U32 ) -> U32
cogent_fam1 (v1, v2) =
   let r' = let v1' = let v' = 17
         and v1' = v'
         and v1' = v1'
         and v2' = 4
         and v3' = v2'
         and v3' = v3'
         and v1' = v1' + v3'
         in v1'
      in v1'
   in r'
cogent_fam2 : ( U32, U32 ) -> U32
cogent_fam2 (v1, v2) =
   let r' = let v4' = let v' = 17
         and v1' = v'
         and v1 = v1'
         and v4' = v1
         in v4'
      in v4'
   in r'
cogent_fam3 : ( U32, U32 ) -> U32
cogent_fam3 (v1, v2) =
   let r' = let v4' = let v' = 17
         and v1' = v'
         and v1 = v1'
         and v2' = 4
         and v3' = v2'
         and v2 = v3'
         and v4' = v1
         and v5' = v2
         and v4' = v4' + v5'
         in v4'
      in v4'
   in r'
cogent_fam4 : ( U32, U32 ) -> U32
cogent_fam4 (v1, v2) =
   let r' = let v5' = let v' = 17
         and v1' = v'
         and v1' = v1'
         and v2' = 4
         and v3' = v2'
         and (v3', v2) = (v3', v3')
         and v1' = v1' + v3'
         and v4' = v1'
         and v1 = v4'
         and v5' = v1
         and v6' = v2
         and v5' = v5' + v6'
         in v5'
      in v5'
   in r'
cogent_fam5 : ( U32, U32 ) -> U32
cogent_fam5 (v1, v2) =
   let r' = let v1' = let v' = 17
         and v1' = v'
         and v1' = v1'
         and v2' = 4
         and v3' = v2'
         and v3' = v3'
         and v1' = v1' + v3'
         in v1'
      in v1'
   in r'
cogent_fam6 : ( U32, U32, U32 ) -> U32
cogent_fam6 (v1, v2, v3) =
   let r' = let v' = let v' = cogent_fam1
         and v1' = 17
         and v2' = v1'
         and v2' = v2'
         and v3' = 4
         and v4' = v3'
         and v4' = v4'
         and v' = v' (v2', v4')
         and v5' = v3
         and v' = v' + v5'
         in v'
      in v'
   in r'
cogent_fam7 : ( U32, U32, U32 ) -> U32
cogent_fam7 (v1, v2, v3) =
   let r' = let v6' = let v' = cogent_fam1
         and v1' = 17
         and v2' = v1'
         and (v2', v1) = (v2', v2')
         and v3' = 4
         and v4' = v3'
         and (v4', v2) = (v4', v4')
         and v' = v' (v2', v4')
         and v5' = v'
         and v3 = v5'
         and v6' = v1
         and v7' = v2
         and v6' = v6' + v7'
         and v8' = v3
         and v6' = v6' + v8'
         in v6'
      in v6'
   in r'
cogent_fam8 : ( U32, U32, U32 ) -> U32
cogent_fam8 (v1, v2, v3) =
   let r' = let v' = let v' = cogent_fam6
         and v1' = 17
         and v2' = v1'
         and (v2', v1) = (v2', v2')
         and v3' = 4
         and v4' = v3'
         and (v4', v2) = (v4', v4')
         and v5' = 0
         and v6' = v5'
         and (v6', v3) = (v6', v6')
         and v' = v' (v2', v4', v6')
         and v7' = v1
         and v' = v' + v7'
         and v8' = v2
         and v' = v' + v8'
         and v9' = v3
         and v' = v' + v9'
         in v'
      in v'
   in r'
cogent_fam9 : ( U32, U32, U32 ) -> U32
cogent_fam9 (v1, v2, v3) =
   let r' = let v1' = let v' = 17
         and v1' = v'
         and v1' = v1'
         and (v1', v3) = if v1'
            then let v2' = 4
               and v3' = v2'
               and v3' = v3'
               in (v3', v3)
            else let v4' = 0
               and v5' = v4'
               and (v5', v3) = (v5', v5')
               in (v5', v3)
         and v6' = v3
         and v1' = v1' + v6'
         in v1'
      in v1'
   in r'
cogent_fam10 : ( U32, U32, U32 ) -> U32
cogent_fam10 (v1, v2, v3) =
   let r' = let v7' = let v' = 17
         and v1' = v'
         and (v1', v1) = (v1', v1')
         and (v1', v2) = if v1'
            then let v2' = 4
               and v3' = v2'
               and (v3', v2) = (v3', v3')
               in (v3', v2)
            else let v4' = 0
               and v5' = v4'
               and v5' = v5'
               in (v5', v2)
         and v6' = v1'
         and v3 = v6'
         and v7' = v1
         and v8' = v2
         and v7' = v7' + v8'
         and v9' = v3
         and v7' = v7' + v9'
         in v7'
      in v7'
   in r'
cogent_fam11 : ( U32, U32, U32 ) -> U32
cogent_fam11 (v1, v2, v3) =
   let r' = let v1' = let v' = 17
         and v1' = v'
         and (v1', v1) = (v1', v1')
         and (v1', v2, v3) = if v1'
            then let v2' = 4
               and v3' = v2'
               and (v3', v2) = (v3', v3')
               in (v3', v2, v3)
            else let v4' = 0
               and v5' = v4'
               and (v5', v3) = (v5', v5')
               in (v5', v2, v3)
         and v6' = v1
         and v1' = v1' + v6'
         and v7' = v2
         and v1' = v1' + v7'
         and v8' = v3
         and v1' = v1' + v8'
         in v1'
      in v1'
   in r'
