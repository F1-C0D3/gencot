#! /bin/csh -f

# Generate dummy declarations for preprocessor constants.
# This is a filter from stdin to stdout.

awk \
'{ if ($0 ~ /[[:blank:]]*#/) { \
     gsub(/^[[:blank:]]*#[[:blank:]]*/, "#") \
     $0 = $0 \
     print "int " $2 ";" \
   } \
 }'

# documentation:
# 
# Implementation in awk:
# - Lines are counted in lnr, its value is the number of the current line in the line rule.
# - An include directive may be written with or without whitespace before and after the include keyword and at
#   the beginning of the line. Thus the regular expressions 
#     /^[[:blank:]]*#/
#     /^[[:blank:]]*#[[:blank:]]*[[:digit:]]+/
#   match all directives or all line directives, respectively.
# - A matched line directive is normalized by creating the form where there is only one space after #.
#   The statement $0 = $0 is used to reprocess the input line so that the line number is in field $2.
#   Then it is expanded by emitting empty lines instead of the line directive.
# - cont is a boolean variable which tells whether the next line is a continuation line for the
#   same directive. It is set according to whether there is a backslash at the end of the previous line.
#   This is detected by matching the line with the regular expression /\\$/.
# - we assume that line directives are never continued in successive lines.
