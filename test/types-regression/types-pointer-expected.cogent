type Struct1_types_pointer_c =
   { m11 : U32, m12 : U32 }
type Struct_Cogent_str1 = { m11 : U32, m12 : U32 }
type Struct_Cogent_str2 = { m11 : U32, m12 : U32 }
type Union4_types_pointer_c
type Union_Cogent_uni1
type Union_Cogent_uni2
cogent_CP01 : U32
cogent_CP01 = 0
cogent_CP02 : U32
cogent_CP02 = 1
type Enum_Cogent_enm1 = U32
cogent_CP11 : U32
cogent_CP11 = 0
cogent_CP12 : U32
cogent_CP12 = 1
type Enum_Cogent_enm2 = U32
cogent_CP21 : U32
cogent_CP21 = 0
cogent_CP22 : U32
cogent_CP22 = 1

cogent_fpp1 : CPtr U8 -> ( (), CPtr U8 )
cogent_fpp1 p1 = ((), p1)
cogent_fpp2 : () -> CVoidPtr
cogent_fpp2 () = r'
cogent_fpp3 : () -> MayNull CVoidPtr
cogent_fpp3 () = r'

type Struct_Cogent_str3 = { m21 : CPtr U32, m22 : MayNull (CPtr U32) }
type Struct39_types_pointer_c =
   { m : MayNull (CPtr U32) }

type Cogent_pt1 = CPtr U32

type Cogent_pt2 = CPtr U32

type Cogent_t1 = U32

type Struct_Cogent_str4 = { m31 : U32, m32 : U32 }
type Cogent_str4_t =
   Struct_Cogent_str4
type Cogent_pstr4_t =
   Struct_Cogent_str4

type Struct_Cogent_str5 = { m31 : U32, m32 : U32 }
type Cogent_str5_t =
   Struct_Cogent_str5
type Cogent_pstr5_t =
   Struct_Cogent_str5
type Cogent_strp_t = (CPtr U8)!
type Cogent_strp2_t = String
type Cogent_strp3_t =
   Cogent_strp2_t
