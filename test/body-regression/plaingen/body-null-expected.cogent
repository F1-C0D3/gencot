cogent_fn1 : (U32
             , MayNull (CPtr =  { cont : U32 })) -> (MayNull (CPtr =  { cont : U32 })
                                                    , MayNull (CPtr =  { cont : U32 }))
cogent_fn1 (i :: U32
           , p :: MayNull (CPtr =  { cont : U32 })) =
   let (c' :: U8
       , r' :: MayNull (CPtr =  { cont : U32 })) = let v' :: MayNull (CPtr =  { cont : U32 }) = let v' :: U32 = i :: U32
         and v1' :: MayNull (CPtr =  { cont : U32 }) = p :: MayNull (CPtr =  { cont : U32 })
         and v2' :: MayNull CVoidPtr = cogent_NULL :: MayNull CVoidPtr
         and v' :: MayNull (CPtr =  { cont : U32 }) = if v' :: U32
            then
               v1' :: MayNull (CPtr =  { cont : U32 })
            else
               v2' :: MayNull CVoidPtr :: MayNull (CPtr =  { cont : U32 })
         in v' :: MayNull (CPtr =  { cont : U32 }) :: MayNull (CPtr =  { cont : U32 })
      in (3 :: U8
         , v' :: MayNull (CPtr =  { cont : U32 })) :: (U8
                                                      , MayNull (CPtr =  { cont : U32 }))
   in (r' :: MayNull (CPtr =  { cont : U32 })
      , p :: MayNull (CPtr =  { cont : U32 })) :: (MayNull (CPtr =  { cont : U32 })
                                                  , MayNull (CPtr =  { cont : U32 }))
cogent_fn2 : (U32
             , (CPtr =  { cont : U32 })) -> (MayNull (CPtr =  { cont : U32 })
                                            , (CPtr =  { cont : U32 }))
cogent_fn2 (i :: U32
           , p :: (CPtr =  { cont : U32 })) =
   let (c' :: U8
       , r' :: MayNull (CPtr =  { cont : U32 })) = let v' :: MayNull (CPtr =  { cont : U32 }) = let v' :: U32 = i :: U32
         and v1' :: (CPtr =  { cont : U32 }) = p :: (CPtr =  { cont : U32 })
         and v2' :: MayNull CVoidPtr = cogent_NULL :: MayNull CVoidPtr
         and v' :: MayNull (CPtr =  { cont : U32 }) = if v' :: U32
            then
               v1' :: (CPtr =  { cont : U32 })
            else
               v2' :: MayNull CVoidPtr :: MayNull (CPtr =  { cont : U32 })
         in v' :: MayNull (CPtr =  { cont : U32 }) :: MayNull (CPtr =  { cont : U32 })
      in (3 :: U8
         , v' :: MayNull (CPtr =  { cont : U32 })) :: (U8
                                                      , MayNull (CPtr =  { cont : U32 }))
   in (r' :: MayNull (CPtr =  { cont : U32 })
      , p :: (CPtr =  { cont : U32 })) :: (MayNull (CPtr =  { cont : U32 })
                                          , (CPtr =  { cont : U32 }))
