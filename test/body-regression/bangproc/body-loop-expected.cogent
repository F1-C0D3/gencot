cogent_lf1 : ( U32, U32 ) -> U32
cogent_lf1 (a, b) =
   let r' = let (c'
                , a) = let v' = 0
         and (c', a) = let i = v'
            and (c', a) = let (c'
                              , a
                              , i) = repeat[( U8, U32, U32 )
                                           , U32]{{}} #{ n = b
                                                       , stop = \#{ acc = (c'
                                                                          , a
                                                                          , i)
                                                                  , obsv = b } => let v2' = let v2' = i
                                                          and v3' = b
                                                          and v2' = v2' < v3'
                                                          in v2'
                                                       in c' > 1 || not v2'
                                                       , step = \#{ acc = (_
                                                                          , a
                                                                          , i)
                                                                  , obsv = b } => let (c'
                                                                                      , a) = let a = let v' = 2
                                                             and v1' = a
                                                             and v1' = v1' * v'
                                                             and a = v1'
                                                             in a
                                                          in (0, a)
                                                       in if c' > 1
                                                          then (c', a, i)
                                                          else
                                                             let i = let v4' = 1
                                                                and v5' = i
                                                                and v5' = v5' + v4'
                                                                and i = v5'
                                                                in i
                                                             in (0, a, i)
                                                       , acc = (0, a, i)
                                                       , obsv = b }
               in (if c' == 2 then 0 else c'
                  , a)
            in (c', a)
         in (c', a)
      in if c' > 0
         then r'
         else let r' = let v' = a in v'
            in r'
   in r'
cogent_lf2 : U32 -> U32
cogent_lf2 i =
   let r' = let (c', i) = let (c'
                              , i) = repeat[( U8, U32 )
                                           , ()]{{}} #{ n = 5
                                                      , stop = \#{ acc = (c', i)
                                                                 , obsv = () } => let v1' = let v1' = i
                                                         and v2' = 5
                                                         and v1' = v1' < v2'
                                                         in v1'
                                                      in c' > 1 || not v1'
                                                      , step = \#{ acc = (_, i)
                                                                 , obsv = () } => let c' = 0
                                                      in if c' > 1
                                                         then (c', i)
                                                         else
                                                            let i = let v3' = 1
                                                               and v4' = i
                                                               and v4' = v4' + v3'
                                                               and i = v4'
                                                               in i
                                                            in (0, i)
                                                      , acc = (0, i)
                                                      , obsv = () }
         in (if c' == 2 then 0 else c'
            , i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf3 : U32 -> U32
cogent_lf3 i =
   let r' = let (c', i) = let (c'
                              , i) = repeat[( U8, U32 )
                                           , ()]{{}} #{ n = 5
                                                      , stop = \#{ acc = (c', i)
                                                                 , obsv = () } => let v1' = let v1' = i
                                                         and v2' = 5
                                                         and v1' = v1' < v2'
                                                         in v1'
                                                      in c' > 1 || not v1'
                                                      , step = \#{ acc = (_, i)
                                                                 , obsv = () } => let c' = 1
                                                      in if c' > 1
                                                         then (c', i)
                                                         else
                                                            let i = let v3' = 1
                                                               and v4' = i
                                                               and v4' = v4' + v3'
                                                               and i = v4'
                                                               in i
                                                            in (0, i)
                                                      , acc = (0, i)
                                                      , obsv = () }
         in (if c' == 2 then 0 else c'
            , i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf4 : U32 -> U32
cogent_lf4 i =
   let r' = let (c', i) = let (c'
                              , i) = repeat[( U8, U32 )
                                           , ()]{{}} #{ n = 5
                                                      , stop = \#{ acc = (c', i)
                                                                 , obsv = () } => let v1' = let v1' = i
                                                         and v2' = 5
                                                         and v1' = v1' < v2'
                                                         in v1'
                                                      in c' > 1 || not v1'
                                                      , step = \#{ acc = (_, i)
                                                                 , obsv = () } => let c' = 2
                                                      in if c' > 1
                                                         then (c', i)
                                                         else
                                                            let i = let v3' = 1
                                                               and v4' = i
                                                               and v4' = v4' + v3'
                                                               and i = v4'
                                                               in i
                                                            in (0, i)
                                                      , acc = (0, i)
                                                      , obsv = () }
         in (if c' == 2 then 0 else c'
            , i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf5 : U32 -> U32
cogent_lf5 i =
   let r' = let (c'
                , r'
                , i) = let (c'
                           , r'
                           , i) = repeat[( U8, U32, U32 )
                                        , ()]{{}} #{ n = 5
                                                   , stop = \#{ acc = (c'
                                                                      , r'
                                                                      , i)
                                                              , obsv = () } => let v1' = let v1' = i
                                                      and v2' = 5
                                                      and v1' = v1' < v2'
                                                      in v1'
                                                   in c' > 1 || not v1'
                                                   , step = \#{ acc = (_, r', i)
                                                              , obsv = () } => let (c'
                                                                                   , r') = let v' = i
                                                      in (3, v')
                                                   in if c' > 1
                                                      then (c', r', i)
                                                      else let i = let v3' = 1
                                                            and v4' = i
                                                            and v4' = v4' + v3'
                                                            and i = v4'
                                                            in i
                                                         in (0, r', i)
                                                   , acc = (0, r', i)
                                                   , obsv = () }
         in (if c' == 2 then 0 else c'
            , r'
            , i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf6 : U32 -> U32
cogent_lf6 i =
   let r' = let (c', i) = let (c'
                              , i) = repeat[( U8, U32 )
                                           , ()]{{}} #{ n = let v' = 5
                                                      and v1' = 1
                                                      and v' = v' + v1'
                                                      in v'
                                                      , stop = \#{ acc = (c', i)
                                                                 , obsv = () } => let v2' = let v2' = i
                                                         and v3' = 5
                                                         and v2' = v2' <= v3'
                                                         in v2'
                                                      in c' > 1 || not v2'
                                                      , step = \#{ acc = (_, i)
                                                                 , obsv = () } => let c' = 0
                                                      in if c' > 1
                                                         then (c', i)
                                                         else
                                                            let i = let v4' = 1
                                                               and v5' = i
                                                               and v5' = v5' + v4'
                                                               and i = v5'
                                                               in i
                                                            in (0, i)
                                                      , acc = (0, i)
                                                      , obsv = () }
         in (if c' == 2 then 0 else c'
            , i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf7 : U32 -> U32
cogent_lf7 i =
   let r' = let (c'
                , i) = let i = let v1' = 12
            and v2' = v1'
            and i = v2'
            in i
         and (c', i) = let (c'
                           , i) = repeat[( U8, U32 )
                                        , ()]{{}} #{ n = 12
                                                   , stop = \#{ acc = (c', i)
                                                              , obsv = () } => let v3' = let v3' = i
                                                      and v4' = 5
                                                      and v3' = v3' > v4'
                                                      in v3'
                                                   in c' > 1 || not v3'
                                                   , step = \#{ acc = (_, i)
                                                              , obsv = () } => let c' = 0
                                                   in if c' > 1
                                                      then (c', i)
                                                      else let i = let v5' = 1
                                                            and v6' = i
                                                            and v6' = v6' - v5'
                                                            and i = v6'
                                                            in i
                                                         in (0, i)
                                                   , acc = (0, i)
                                                   , obsv = () }
            in (if c' == 2 then 0 else c'
               , i)
         in (c', i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf8 : U32 -> U32
cogent_lf8 i =
   let r' = let (c'
                , i) = let i = let v2' = 12
            and v3' = v2'
            and i = v3'
            in i
         and (c', i) = let (c'
                           , i) = repeat[( U8, U32 )
                                        , ()]{{}} #{ n = let v' = 12
                                                   and v1' = 1
                                                   and v' = v' + v1'
                                                   in v'
                                                   , stop = \#{ acc = (c', i)
                                                              , obsv = () } => let v4' = let v4' = i
                                                      and v5' = 5
                                                      and v4' = v4' >= v5'
                                                      in v4'
                                                   in c' > 1 || not v4'
                                                   , step = \#{ acc = (_, i)
                                                              , obsv = () } => let c' = 0
                                                   in if c' > 1
                                                      then (c', i)
                                                      else let i = let v6' = 1
                                                            and v7' = i
                                                            and v7' = v7' - v6'
                                                            and i = v7'
                                                            in i
                                                         in (0, i)
                                                   , acc = (0, i)
                                                   , obsv = () }
            in (if c' == 2 then 0 else c'
               , i)
         in (c', i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf9 : U32 -> U32
cogent_lf9 i =
   let r' = let (c', i) = let (c'
                              , i) = repeat[( U8, U32 )
                                           , ()]{{}} #{ n = 5
                                                      , stop = \#{ acc = (c', i)
                                                                 , obsv = () } => let v1' = let v1' = i
                                                         and v2' = 5
                                                         and v1' = v1' < v2'
                                                         in v1'
                                                      in c' > 1 || not v1'
                                                      , step = \#{ acc = (_, i)
                                                                 , obsv = () } => let c' = 0
                                                      in if c' > 1
                                                         then (c', i)
                                                         else
                                                            let i = let v3' = 3
                                                               and v4' = i
                                                               and v4' = v4' + v3'
                                                               and i = v4'
                                                               in i
                                                            in (0, i)
                                                      , acc = (0, i)
                                                      , obsv = () }
         in (if c' == 2 then 0 else c'
            , i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf10 : U32 -> U32
cogent_lf10 i =
   let r' = let (c', i) = let (c'
                              , i) = repeat[( U8, U32 )
                                           , ()]{{}} #{ n = 5
                                                      , stop = \#{ acc = (c', i)
                                                                 , obsv = () } => let v1' = let v1' = i
                                                         and v2' = 5
                                                         and v1' = v1' < v2'
                                                         in v1'
                                                      in c' > 1 || not v1'
                                                      , step = \#{ acc = (_, i)
                                                                 , obsv = () } => let c' = 0
                                                      in if c' > 1
                                                         then (c', i)
                                                         else
                                                            let i = let v3' = i
                                                               and v4' = 3
                                                               and v3' = v3' + v4'
                                                               and v5' = v3'
                                                               and i = v5'
                                                               in i
                                                            in (0, i)
                                                      , acc = (0, i)
                                                      , obsv = () }
         in (if c' == 2 then 0 else c'
            , i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf11 : U32 -> U32
cogent_lf11 i =
   let r' = let (c', i) = let (c'
                              , i) = repeat[( U8, U32 )
                                           , ()]{{}} #{ n = 5
                                                      , stop = \#{ acc = (c', i)
                                                                 , obsv = () } => let v1' = let v1' = i
                                                         and v2' = 5
                                                         and v1' = v1' < v2'
                                                         in v1'
                                                      in c' > 1 || not v1'
                                                      , step = \#{ acc = (_, i)
                                                                 , obsv = () } => let c' = 0
                                                      in if c' > 1
                                                         then (c', i)
                                                         else
                                                            let i = let v3' = 3
                                                               and v4' = i
                                                               and v3' = v3' + v4'
                                                               and v5' = v3'
                                                               and i = v5'
                                                               in i
                                                            in (0, i)
                                                      , acc = (0, i)
                                                      , obsv = () }
         in (if c' == 2 then 0 else c'
            , i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf12 : U32 -> U32
cogent_lf12 i =
   let r' = let (c'
                , i) = let i = let v2' = 12
            and v3' = v2'
            and i = v3'
            in i
         and (c', i) = let (c'
                           , i) = repeat[( U8, U32 )
                                        , ()]{{}} #{ n = let v' = 12
                                                   and v1' = 1
                                                   and v' = v' + v1'
                                                   in v'
                                                   , stop = \#{ acc = (c', i)
                                                              , obsv = () } => let v4' = let v4' = i
                                                      and v5' = 5
                                                      and v4' = v4' >= v5'
                                                      in v4'
                                                   in c' > 1 || not v4'
                                                   , step = \#{ acc = (_, i)
                                                              , obsv = () } => let c' = 0
                                                   in if c' > 1
                                                      then (c', i)
                                                      else let i = let v6' = 3
                                                            and v7' = i
                                                            and v7' = v7' - v6'
                                                            and i = v7'
                                                            in i
                                                         in (0, i)
                                                   , acc = (0, i)
                                                   , obsv = () }
            in (if c' == 2 then 0 else c'
               , i)
         in (c', i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf13 : U32 -> U32
cogent_lf13 i =
   let r' = let (c'
                , i) = let i = let v2' = 12
            and v3' = v2'
            and i = v3'
            in i
         and (c', i) = let (c'
                           , i) = repeat[( U8, U32 )
                                        , ()]{{}} #{ n = let v' = 12
                                                   and v1' = 1
                                                   and v' = v' + v1'
                                                   in v'
                                                   , stop = \#{ acc = (c', i)
                                                              , obsv = () } => let v4' = let v4' = i
                                                      and v5' = 5
                                                      and v4' = v4' >= v5'
                                                      in v4'
                                                   in c' > 1 || not v4'
                                                   , step = \#{ acc = (_, i)
                                                              , obsv = () } => let c' = 0
                                                   in if c' > 1
                                                      then (c', i)
                                                      else let i = let v6' = i
                                                            and v7' = 3
                                                            and v6' = v6' - v7'
                                                            and v8' = v6'
                                                            and i = v8'
                                                            in i
                                                         in (0, i)
                                                   , acc = (0, i)
                                                   , obsv = () }
            in (if c' == 2 then 0 else c'
               , i)
         in (c', i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf14 : ( U32, U32 ) -> U32
cogent_lf14 (i, j) =
   let r' = let (c', i) = let (c'
                              , i) = repeat[( U8, U32 )
                                           , U32]{{}} #{ n = j
                                                       , stop = \#{ acc = (c'
                                                                          , i)
                                                                  , obsv = j } => let v1' = let v1' = i
                                                          and v2' = j
                                                          and v1' = v1' < v2'
                                                          in v1'
                                                       in c' > 1 || not v1'
                                                       , step = \#{ acc = (_, i)
                                                                  , obsv = j } => let c' = 0
                                                       in if c' > 1
                                                          then (c', i)
                                                          else
                                                             let i = let v3' = 1
                                                                and v4' = i
                                                                and v4' = v4' + v3'
                                                                and i = v4'
                                                                in i
                                                             in (0, i)
                                                       , acc = (0, i)
                                                       , obsv = j }
         in (if c' == 2 then 0 else c'
            , i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf15 : U32 -> U32
cogent_lf15 i =
   let r' = let (c'
                , i) = let i = let v1' = 0
            and v2' = v1'
            and i = v2'
            in i
         and (c', i) = let (c'
                           , i) = repeat[( U8, U32 )
                                        , ()]{{}} #{ n = 5
                                                   , stop = \#{ acc = (c', i)
                                                              , obsv = () } => let v3' = let v3' = i
                                                      and v4' = 5
                                                      and v3' = v3' /= v4'
                                                      in v3'
                                                   in c' > 1 || not v3'
                                                   , step = \#{ acc = (_, i)
                                                              , obsv = () } => let c' = 0
                                                   in if c' > 1
                                                      then (c', i)
                                                      else let i = let v5' = 1
                                                            and v6' = i
                                                            and v6' = v6' + v5'
                                                            and i = v6'
                                                            in i
                                                         in (0, i)
                                                   , acc = (0, i)
                                                   , obsv = () }
            in (if c' == 2 then 0 else c'
               , i)
         in (c', i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lf16 : U32 -> U32
cogent_lf16 i =
   let r' = let (c'
                , i) = let i = let v1' = 10
            and v2' = v1'
            and i = v2'
            in i
         and (c', i) = let (c'
                           , i) = repeat[( U8, U32 )
                                        , ()]{{}} #{ n = 10
                                                   , stop = \#{ acc = (c', i)
                                                              , obsv = () } => let v3' = let v3' = i
                                                      and v4' = 5
                                                      and v3' = v3' /= v4'
                                                      in v3'
                                                   in c' > 1 || not v3'
                                                   , step = \#{ acc = (_, i)
                                                              , obsv = () } => let c' = 0
                                                   in if c' > 1
                                                      then (c', i)
                                                      else let i = let v5' = 1
                                                            and v6' = i
                                                            and v6' = v6' - v5'
                                                            and i = v6'
                                                            in i
                                                         in (0, i)
                                                   , acc = (0, i)
                                                   , obsv = () }
            in (if c' == 2 then 0 else c'
               , i)
         in (c', i)
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'

cogent_lfe1 : U32 -> U32
cogent_lfe1 i =
   let r' = let c' = gencotDummy "Unsupported form of for loop: Counting variables modified in body"
         {- for (; i < 5; i++)
             i = 0; -}
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lfe2 : ( U32, U32 ) -> U32
cogent_lfe2 (i, j) =
   let r' = let c' = gencotDummy "Unsupported form of for loop: Controlling expression modified"
         {- for (; i < j; i++)
             j = 0; -}
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lfe3 : U32 -> U32
cogent_lfe3 i =
   let r' = let c' = gencotDummy "Unsupported form of for loop: No counting variable found"
         {- for (; i < i + 5; i++)
             ; -}
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lfe4 : ( U32, U32 ) -> U32
cogent_lfe4 (i, j) =
   let r' = let c' = gencotDummy "Unsupported form of for loop: Controlling expression modified"
         {- for (; i < j; i++, j++)
             ; -}
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lfe5 : U32 -> U32
cogent_lfe5 i =
   let r' = let c' = gencotDummy "Unsupported form of for loop: No upper limit for iterations found"
         {- for (; i < 5; i--)
             ; -}
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lfe6 : U32 -> U32
cogent_lfe6 i =
   let r' = let c' = gencotDummy "Unsupported form of for loop: No upper limit for iterations found"
         {- for (; i > 5; i--)
             ; -}
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lfe7 : U32 -> U32
cogent_lfe7 i =
   let r' = let c' = gencotDummy "Unsupported form of for loop: No upper limit for iterations found"
         {- for (; i != 5; i++)
             ; -}
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lfe8 : U32 -> U32
cogent_lfe8 i =
   let r' = let c' = gencotDummy "Unsupported form of for loop: No upper limit for iterations found"
         {- for (i = 3; i != 5; i--)
             ; -}
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lfe9 : U32 -> U32
cogent_lfe9 i =
   let r' = let c' = gencotDummy "Unsupported form of for loop: No upper limit for iterations found"
         {- for (i = 10; i != 5; i++)
             ; -}
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
cogent_lfe10 : U32 -> U32
cogent_lfe10 i =
   let r' = let c' = gencotDummy "Unsupported form of for loop: No upper limit for iterations found"
         {- for (i = 0; i != 5; i += 2)
             ; -}
      in if c' > 0
         then r'
         else let r' = let v' = i in v'
            in r'
   in r'
