#! /bin/sh

# Select preprocessor flag definitions from normalized preprocessor directives and add origin markers.
# This is a filter from stdin to stdout with an additional filename argument.
# The argument file must contain a list of preprocessor macro names (one per line).

if [ $# -gt 1 ]
then
  echo "Error: Only optional file name expected as arguments."
  exit 0
fi

awk \
'BEGIN { 
   if (ARGC > 1) { 
     rfile = ARGV[1]; delete ARGV[1] 
     while ((getline cline < rfile) > 0) { 
       omit[cline] = 1 
     } 
     close(rfile) 
   } 
 } 
 { lnr++ 
   if ($1 == "#define" && !($2 ~ /\(/) && !(omit[$2]) && NF == 2) { 
     print "#ORIGIN " lnr " +" 
     print 
     print "#ENDORIG " lnr " +\n\n" 
   } 
 }' $1

# documentation:
# 
# A preprocessor flag definition has the form
#   #define NNN
# where NNN is only followed by optional whitespace and a newline.
# Definitions where NNN is listed in the argument file are omitted.
#
# Implementation in awk:
# - After matching a normalized include directive, NNN is field 2.
# - To test whether field 2 contains a parenthesis it is matched against the pattern /\(/.
# - To test whether NNN is not followed by a replacement text or a backslash (for a continuation line)
#   the number of fields NF is tested to be 2.
