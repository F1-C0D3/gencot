cogent_lf1 : ( U32, U32 ) -> U32
cogent_lf1 (a, b) =
   if (let (c'
           , _
           , _) = repeat[( U8, U32, U32 )
                        , U32]{{}} #{ n = b
                                    , stop = \#{ acc = (c', a, i)
                                               , obsv = b } => c' > 1
                                    , step = \#{ acc = (_, a, i)
                                               , obsv = b } => if not (i < b)
                                    then (if i < b then 0 else 2
                                         , if i < b then a * 2 else a
                                         , i)
                                    else (0
                                         , if i < b then a * 2 else a
                                         , i + 1)
                                    , acc = (0, a, 0)
                                    , obsv = b }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , a
            , _) = repeat[( U8, U32, U32 )
                         , U32]{{}} #{ n = b
                                     , stop = \#{ acc = (c', a, i)
                                                , obsv = b } => c' > 1
                                     , step = \#{ acc = (_, a, i)
                                                , obsv = b } => if not (i < b)
                                     then (if i < b then 0 else 2
                                          , if i < b then a * 2 else a
                                          , i)
                                     else (0
                                          , if i < b then a * 2 else a
                                          , i + 1)
                                     , acc = (0, a, 0)
                                     , obsv = b }
      in a
cogent_lf2 : U32 -> U32
cogent_lf2 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 5
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i < 5)
                                   then (if i < 5 then 0 else 2, i)
                                   else (0, i + 1)
                                   , acc = (0, i)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i < 5)
                                    then (if i < 5 then 0 else 2, i)
                                    else (0, i + 1)
                                    , acc = (0, i)
                                    , obsv = () }
      in i
cogent_lf3 : U32 -> U32
cogent_lf3 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 5
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i < 5)
                                   then (if i < 5 then 1 else 2, i)
                                   else (0, i + 1)
                                   , acc = (0, i)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i < 5)
                                    then (if i < 5 then 1 else 2, i)
                                    else (0, i + 1)
                                    , acc = (0, i)
                                    , obsv = () }
      in i
cogent_lf4 : U32 -> U32
cogent_lf4 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 5
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => (2, i)
                                   , acc = (0, i)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => (2, i)
                                    , acc = (0, i)
                                    , obsv = () }
      in i
cogent_lf5 : U32 -> U32
cogent_lf5 i =
   if (let (c'
           , _
           , _) = repeat[( U8, U32, U32 )
                        , ()]{{}} #{ n = 5
                                   , stop = \#{ acc = (c', r', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, r', i)
                                              , obsv = () } => (if i < 5
                                                               then 3
                                                               else 2
                                                               , if i < 5
                                                               then i
                                                               else r'
                                                               , i)
                                   , acc = (0, r', i)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then let (_
            , r'
            , _) = repeat[( U8, U32, U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c', r', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, r', i)
                                               , obsv = () } => (if i < 5
                                                                then 3
                                                                else 2
                                                                , if i < 5
                                                                then i
                                                                else r'
                                                                , i)
                                    , acc = (0, r', i)
                                    , obsv = () }
      in r'
   else let (_
            , _
            , i) = repeat[( U8, U32, U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c', r', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, r', i)
                                               , obsv = () } => (if i < 5
                                                                then 3
                                                                else 2
                                                                , if i < 5
                                                                then i
                                                                else r'
                                                                , i)
                                    , acc = (0, r', i)
                                    , obsv = () }
      in i
cogent_lf6 : U32 -> U32
cogent_lf6 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 5 + 1
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i <= 5)
                                   then (if i <= 5 then 0 else 2
                                        , i)
                                   else (0, i + 1)
                                   , acc = (0, i)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 5 + 1
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i <= 5)
                                    then (if i <= 5 then 0 else 2
                                         , i)
                                    else (0, i + 1)
                                    , acc = (0, i)
                                    , obsv = () }
      in i
cogent_lf7 : U32 -> U32
cogent_lf7 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 12
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i > 5)
                                   then (if i > 5 then 0 else 2, i)
                                   else (0, i - 1)
                                   , acc = (0, 12)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 12
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i > 5)
                                    then (if i > 5 then 0 else 2, i)
                                    else (0, i - 1)
                                    , acc = (0, 12)
                                    , obsv = () }
      in i
cogent_lf8 : U32 -> U32
cogent_lf8 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 12 + 1
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i >= 5)
                                   then (if i >= 5 then 0 else 2
                                        , i)
                                   else (0, i - 1)
                                   , acc = (0, 12)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 12 + 1
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i >= 5)
                                    then (if i >= 5 then 0 else 2
                                         , i)
                                    else (0, i - 1)
                                    , acc = (0, 12)
                                    , obsv = () }
      in i
cogent_lf9 : U32 -> U32
cogent_lf9 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 5
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i < 5)
                                   then (if i < 5 then 0 else 2, i)
                                   else (0, i + 3)
                                   , acc = (0, i)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i < 5)
                                    then (if i < 5 then 0 else 2, i)
                                    else (0, i + 3)
                                    , acc = (0, i)
                                    , obsv = () }
      in i
cogent_lf10 : U32 -> U32
cogent_lf10 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 5
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i < 5)
                                   then (if i < 5 then 0 else 2, i)
                                   else (0, i + 3)
                                   , acc = (0, i)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i < 5)
                                    then (if i < 5 then 0 else 2, i)
                                    else (0, i + 3)
                                    , acc = (0, i)
                                    , obsv = () }
      in i
cogent_lf11 : U32 -> U32
cogent_lf11 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 5
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i < 5)
                                   then (if i < 5 then 0 else 2, i)
                                   else (0, 3 + i)
                                   , acc = (0, i)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i < 5)
                                    then (if i < 5 then 0 else 2, i)
                                    else (0, 3 + i)
                                    , acc = (0, i)
                                    , obsv = () }
      in i
cogent_lf12 : U32 -> U32
cogent_lf12 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 12 + 1
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i >= 5)
                                   then (if i >= 5 then 0 else 2
                                        , i)
                                   else (0, i - 3)
                                   , acc = (0, 12)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 12 + 1
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i >= 5)
                                    then (if i >= 5 then 0 else 2
                                         , i)
                                    else (0, i - 3)
                                    , acc = (0, 12)
                                    , obsv = () }
      in i
cogent_lf13 : U32 -> U32
cogent_lf13 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 12 + 1
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i >= 5)
                                   then (if i >= 5 then 0 else 2
                                        , i)
                                   else (0, i - 3)
                                   , acc = (0, 12)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 12 + 1
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i >= 5)
                                    then (if i >= 5 then 0 else 2
                                         , i)
                                    else (0, i - 3)
                                    , acc = (0, 12)
                                    , obsv = () }
      in i
cogent_lf14 : ( U32, U32 ) -> U32
cogent_lf14 (i, j) =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , U32]{{}} #{ n = j
                                    , stop = \#{ acc = (c', i)
                                               , obsv = j } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = j } => if not (i < j)
                                    then (if i < j then 0 else 2, i)
                                    else (0, i + 1)
                                    , acc = (0, i)
                                    , obsv = j }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , U32]{{}} #{ n = j
                                     , stop = \#{ acc = (c', i)
                                                , obsv = j } => c' > 1
                                     , step = \#{ acc = (_, i)
                                                , obsv = j } => if not (i < j)
                                     then (if i < j then 0 else 2, i)
                                     else (0, i + 1)
                                     , acc = (0, i)
                                     , obsv = j }
      in i
cogent_lf15 : U32 -> U32
cogent_lf15 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 5
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i /= 5)
                                   then (if i /= 5 then 0 else 2
                                        , i)
                                   else (0, i + 1)
                                   , acc = (0, 0)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i /= 5)
                                    then (if i /= 5 then 0 else 2
                                         , i)
                                    else (0, i + 1)
                                    , acc = (0, 0)
                                    , obsv = () }
      in i
cogent_lf16 : U32 -> U32
cogent_lf16 i =
   if (let (c'
           , _) = repeat[( U8, U32 )
                        , ()]{{}} #{ n = 10
                                   , stop = \#{ acc = (c', i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, i)
                                              , obsv = () } => if not (i /= 5)
                                   then (if i /= 5 then 0 else 2
                                        , i)
                                   else (0, i - 1)
                                   , acc = (0, 10)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , i) = repeat[( U8, U32 )
                         , ()]{{}} #{ n = 10
                                    , stop = \#{ acc = (c', i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, i)
                                               , obsv = () } => if not (i /= 5)
                                    then (if i /= 5 then 0 else 2
                                         , i)
                                    else (0, i - 1)
                                    , acc = (0, 10)
                                    , obsv = () }
      in i

cogent_lfe1 : U32 -> U32
cogent_lfe1 i =
   if gencotDummy "Unsupported form of for loop: Counting variables modified in body" > 0
   then r'
   else i
cogent_lfe2 : ( U32, U32 ) -> U32
cogent_lfe2 (i, j) =
   if gencotDummy "Unsupported form of for loop: Controlling expression modified" > 0
   then r'
   else i
cogent_lfe3 : U32 -> U32
cogent_lfe3 i =
   if gencotDummy "Unsupported form of for loop: No counting variable found" > 0
   then r'
   else i
cogent_lfe4 : ( U32, U32 ) -> U32
cogent_lfe4 (i, j) =
   if gencotDummy "Unsupported form of for loop: Controlling expression modified" > 0
   then r'
   else i
cogent_lfe5 : U32 -> U32
cogent_lfe5 i =
   if gencotDummy "Unsupported form of for loop: No upper limit for iterations found" > 0
   then r'
   else i
cogent_lfe6 : U32 -> U32
cogent_lfe6 i =
   if gencotDummy "Unsupported form of for loop: No upper limit for iterations found" > 0
   then r'
   else i
cogent_lfe7 : U32 -> U32
cogent_lfe7 i =
   if gencotDummy "Unsupported form of for loop: No upper limit for iterations found" > 0
   then r'
   else i
cogent_lfe8 : U32 -> U32
cogent_lfe8 i =
   if gencotDummy "Unsupported form of for loop: No upper limit for iterations found" > 0
   then r'
   else i
cogent_lfe9 : U32 -> U32
cogent_lfe9 i =
   if gencotDummy "Unsupported form of for loop: No upper limit for iterations found" > 0
   then r'
   else i
cogent_lfe10 : U32 -> U32
cogent_lfe10 i =
   if gencotDummy "Unsupported form of for loop: No upper limit for iterations found" > 0
   then r'
   else i

cogent_lfn1 : ( U32, MayNull (CPtr U32) ) -> ( U32, MayNull (CPtr U32) )
cogent_lfn1 (i, j) =
   (if (let (c'
            , _
            , _) = repeat[( U8, MayNull (CPtr U32), U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c', j, i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, j, i)
                                               , obsv = () } => let (c'
                                                                    , j) = notNull[CPtr U32]{{}} j
                                       | Nothing -> (2, cogent_NULL)
                                       | Some j -> if i < 5
                                          then (0
                                               , j { cont = cogent_NULL })
                                          else (2, j)
                                    in if c' > 1
                                       then (c', j, i)
                                       else (0, j, i + 1)
                                    , acc = (0, j, 0)
                                    , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then r'
   else let (_
            , _
            , i) = repeat[( U8, MayNull (CPtr U32), U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c', j, i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, j, i)
                                               , obsv = () } => let (c'
                                                                    , j) = notNull[CPtr U32]{{}} j
                                       | Nothing -> (2, cogent_NULL)
                                       | Some j -> if i < 5
                                          then (0
                                               , j { cont = cogent_NULL })
                                          else (2, j)
                                    in if c' > 1
                                       then (c', j, i)
                                       else (0, j, i + 1)
                                    , acc = (0, j, 0)
                                    , obsv = () }
      in i
   , let (_
         , j
         , _) = repeat[( U8, MayNull (CPtr U32), U32 )
                      , ()]{{}} #{ n = 5
                                 , stop = \#{ acc = (c', j, i)
                                            , obsv = () } => c' > 1
                                 , step = \#{ acc = (_, j, i)
                                            , obsv = () } => let (c'
                                                                 , j) = notNull[CPtr U32]{{}} j
                                    | Nothing -> (2, cogent_NULL)
                                    | Some j -> if i < 5
                                       then (0
                                            , j { cont = cogent_NULL })
                                       else (2, j)
                                 in if c' > 1
                                    then (c', j, i)
                                    else (0, j, i + 1)
                                 , acc = (0, j, 0)
                                 , obsv = () }
   in j)

type Cogent_lfa =
   CArr5 (MayNull (CPtr U32))
cogent_lfn2 : Cogent_lfa -> ( U32, Cogent_lfa )
cogent_lfn2 a =
   if (let (c'
           , _
           , _
           , _) = repeat[( U8, U32, Cogent_lfa, U32 )
                        , ()]{{}} #{ n = 5
                                   , stop = \#{ acc = (c'
                                                      , r'
                                                      , a
                                                      , i)
                                              , obsv = () } => c' > 1
                                   , step = \#{ acc = (_, r', a, i)
                                              , obsv = () } => let (c'
                                                                   , a
                                                                   , r') = if i < 5
                                      then let (a
                                               , p2') = modifyArr[Cogent_lfa
                                                                 , U32
                                                                 , MayNull (CPtr U32)
                                                                 , ()
                                                                 , MayNull (CPtr U32)]{{}} (a
                                                                                           , i
                                                                                           , \(p2'
                                                                                              , ()) => (p2'
                                                                                                       , p2')
                                                                                           , ())
                                         in notNull[CPtr U32]{{}} p2'
                                            | Nothing -> (2, a, r')
                                            | Some p2' -> (3
                                                          , let (a
                                                                , _) = modifyArr[Cogent_lfa
                                                                                , U32
                                                                                , MayNull (CPtr U32)
                                                                                , ()
                                                                                , U32]{{}} (a
                                                                                           , i
                                                                                           , \(p0'
                                                                                              , ()) => (p0'
                                                                                                       , gencotDummy "Dereferencing pointer which may be NULL")
                                                                                           , ())
                                                          in a
                                                          , let (_
                                                                , v5') = modifyArr[Cogent_lfa
                                                                                  , U32
                                                                                  , MayNull (CPtr U32)
                                                                                  , ()
                                                                                  , U32]{{}} (a
                                                                                             , i
                                                                                             , \(p0'
                                                                                                , ()) => (p0'
                                                                                                         , gencotDummy "Dereferencing pointer which may be NULL")
                                                                                             , ())
                                                          in v5')
                                      else (2, a, r')
                                   in if c' > 1
                                      then (c', r', a, i)
                                      else (0, r', a, i + 1)
                                   , acc = (0, r', a, 0)
                                   , obsv = () }
      in if c' == 2
         then 0
         else c') > 0
   then let (_
            , r'
            , a
            , _) = repeat[( U8, U32, Cogent_lfa, U32 )
                         , ()]{{}} #{ n = 5
                                    , stop = \#{ acc = (c'
                                                       , r'
                                                       , a
                                                       , i)
                                               , obsv = () } => c' > 1
                                    , step = \#{ acc = (_, r', a, i)
                                               , obsv = () } => let (c'
                                                                    , a
                                                                    , r') = if i < 5
                                       then let (a
                                                , p2') = modifyArr[Cogent_lfa
                                                                  , U32
                                                                  , MayNull (CPtr U32)
                                                                  , ()
                                                                  , MayNull (CPtr U32)]{{}} (a
                                                                                            , i
                                                                                            , \(p2'
                                                                                               , ()) => (p2'
                                                                                                        , p2')
                                                                                            , ())
                                          in notNull[CPtr U32]{{}} p2'
                                             | Nothing -> (2, a, r')
                                             | Some p2' -> (3
                                                           , let (a
                                                                 , _) = modifyArr[Cogent_lfa
                                                                                 , U32
                                                                                 , MayNull (CPtr U32)
                                                                                 , ()
                                                                                 , U32]{{}} (a
                                                                                            , i
                                                                                            , \(p0'
                                                                                               , ()) => (p0'
                                                                                                        , gencotDummy "Dereferencing pointer which may be NULL")
                                                                                            , ())
                                                           in a
                                                           , let (_
                                                                 , v5') = modifyArr[Cogent_lfa
                                                                                   , U32
                                                                                   , MayNull (CPtr U32)
                                                                                   , ()
                                                                                   , U32]{{}} (a
                                                                                              , i
                                                                                              , \(p0'
                                                                                                 , ()) => (p0'
                                                                                                          , gencotDummy "Dereferencing pointer which may be NULL")
                                                                                              , ())
                                                           in v5')
                                       else (2, a, r')
                                    in if c' > 1
                                       then (c', r', a, i)
                                       else (0, r', a, i + 1)
                                    , acc = (0, r', a, 0)
                                    , obsv = () }
      in (r', a)
   else (0
        , let (_
              , _
              , a
              , _) = repeat[( U8, U32, Cogent_lfa, U32 )
                           , ()]{{}} #{ n = 5
                                      , stop = \#{ acc = (c'
                                                         , r'
                                                         , a
                                                         , i)
                                                 , obsv = () } => c' > 1
                                      , step = \#{ acc = (_, r', a, i)
                                                 , obsv = () } => let (c'
                                                                      , a
                                                                      , r') = if i < 5
                                         then let (a
                                                  , p2') = modifyArr[Cogent_lfa
                                                                    , U32
                                                                    , MayNull (CPtr U32)
                                                                    , ()
                                                                    , MayNull (CPtr U32)]{{}} (a
                                                                                              , i
                                                                                              , \(p2'
                                                                                                 , ()) => (p2'
                                                                                                          , p2')
                                                                                              , ())
                                            in notNull[CPtr U32]{{}} p2'
                                               | Nothing -> (2, a, r')
                                               | Some p2' -> (3
                                                             , let (a
                                                                   , _) = modifyArr[Cogent_lfa
                                                                                   , U32
                                                                                   , MayNull (CPtr U32)
                                                                                   , ()
                                                                                   , U32]{{}} (a
                                                                                              , i
                                                                                              , \(p0'
                                                                                                 , ()) => (p0'
                                                                                                          , gencotDummy "Dereferencing pointer which may be NULL")
                                                                                              , ())
                                                             in a
                                                             , let (_
                                                                   , v5') = modifyArr[Cogent_lfa
                                                                                     , U32
                                                                                     , MayNull (CPtr U32)
                                                                                     , ()
                                                                                     , U32]{{}} (a
                                                                                                , i
                                                                                                , \(p0'
                                                                                                   , ()) => (p0'
                                                                                                            , gencotDummy "Dereferencing pointer which may be NULL")
                                                                                                , ())
                                                             in v5')
                                         else (2, a, r')
                                      in if c' > 1
                                         then (c', r', a, i)
                                         else (0, r', a, i + 1)
                                      , acc = (0, r', a, 0)
                                      , obsv = () }
        in a)
