{-*
 * \file ssl.h
 *
 * \brief SSL/TLS functions.
 -}
{-
 *  Copyright (C) 2006-2015, ARM Limited, All Rights Reserved
 *  SPDX-License-Identifier: Apache-2.0
 *
 *  This file is part of mbed TLS (https://tls.mbed.org)
 -}

-}_
-}_

-}_
-}_


-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

--#include "bignum.h"

-}_
-}_


-}_
-}_

-}_
-}_

-}_
-}_

{-
 * SSL Error codes
 -}

-}_{-*< The requested feature is not available. -}
-}_

-}_{-*< Bad input parameters to function. -}
-}_

{-
 * Various constants
 -}

-}_
-}_

-}_{-!< SSL v3.0 -}
-}_

{-
 * Default range for DTLS retransmission timer value, in milliseconds.
 * RFC 6347 4.2.4.1 says from 1 second to 60 seconds.
 -}

-}_
-}_

-}_
-}_

{-
 * Maximum fragment length in bytes,
 * determines the size of each of the two internal I/O buffers.
 -}

-}_
-}_

-}_{-*< Size of the input / output buffer -}
-}_

-}_
-}_


-}_
-}_

-}_
-}_

-}_
-}_


{- Dummy type used only for its size -}

-}_
-}_

-}_
-}_

-}_
-}_

-}_{- RFC 5246 8.1.1 -}
-}_

-}_
-}_

-}_
-}_

-}_{- RFC 5246 8.1.2 -}
-}_

-}_
-}_

-}_
-}_


-}_
-}_


-}_
-}_

-}_
-}_

-}_
-}_

{-
 * SSL state machine
 -}

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

{-*
 * \brief          Callback type: send data on the network.
 *
 * \note           That callback may be either blocking or non-blocking.
 *
 * \param ctx      Context for the send callback (typically a file descriptor)
 * \param buf      Buffer holding the data to send
 * \param len      Length of the data to send
 *
 * \return         The callback must return the number of bytes sent if any,
 *                 or a non-zero error code.
 *                 If performing non-blocking I/O, \c MBEDTLS_ERR_SSL_WANT_WRITE
 *                 must be returned when the operation would block.
 *
 * \note           The callback is allowed to send fewer bytes than requested.
 *                 It must always return the number of bytes actually sent.
 -}

-}_
-}_

-}_
-}_

-}_
-}_

{- Defined below -}

-}_
-}_

-}_
-}_

-}_
-}_

{- Defined in ssl_internal.h -}

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_


-}_
-}_
{-*
 * \brief           Callback type: start external signature operation.
 -}

-}_
-}_

-}_
-}_

-}_
-}_


-}_{- MBEDTLS_SSL_ASYNC_PRIVATE -}
-}_

{-
 * This structure is used for storing current session data.
 -}

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

-}_{-!< chosen ciphersuite -}
-}_

-}_{-!< session id length  -}
-}_

-}_{-!< session identifier -}
-}_

-}_
-}_

{-*
 * SSL/TLS configuration to be shared between mbedtls_ssl_context structures.
 -}

-}_
-}_

-}_
-}_
    {- Group items by size (largest first) to minimize padding overhead -}

    {-
     * Pointers
     -}


-}_{-!< allowed ciphersuites per version   -}
-}_

    {-* Callback for printing debug output                                  -}

-}_
-}_

-}_{-!< context for the debug function     -}
-}_


-}_
-}_

-}_
-}_

-}_{-!< start asynchronous signature operation -}
-}_

-}_{- MBEDTLS_X509_CRT_PARSE_C -}
-}_

-}_{- MBEDTLS_SSL_ASYNC_PRIVATE -}
-}_


-}_
-}_

-}_{-!< prime modulus for DHM              -}
-}_

-}_
-}_


-}_
-}_

-}_{-!< ordered list of protocols          -}
-}_

-}_
-}_

    {-
     * Flags (bitfields)
     -}


-}_{-!< 0: client, 1: server               -}
-}_

-}_{-!< MBEDTLS_SSL_VERIFY_XXX             -}
-}_

-}_
-}_



-}_
-}_

-}_
-}_

-}_{-!< configuration information          -}
-}_

    {-
     * Miscellaneous
     -}

-}_{-!< SSL handshake: current state     -}
-}_

-}_
-}_


-}_
-}_


-}_
-}_

-}_
-}_


-}_
-}_

-}_
-}_

-}_
-}_

-}_{- MBEDTLS_SSL_HW_RECORD_ACCEL -}
-}_

{-*
 * \brief               Return the name of the ciphersuite associated with the
 *                      given ID
 *
 * \param ciphersuite_id SSL ciphersuite ID
 *
 * \return              a string containing the ciphersuite name
 -}

-}_
-}_

{-*
 * \brief               Return the ID of the ciphersuite associated with the
 *                      given name
 *
 * \param ciphersuite_name SSL ciphersuite name
 *
 * \return              the ID with the ciphersuite or 0 if not found
 -}

-}_
-}_

{-*
 * \brief          Initialize an SSL context
 *                 Just makes the context ready for mbedtls_ssl_setup() or
 *                 mbedtls_ssl_free()
 *
 * \param ssl      SSL context
 -}

-}_
-}_

{-*
 * \brief          Set up an SSL context for use
 *
 -}

-}_
-}_

-}_
-}_


-}_
-}_
{-*
 * \brief          Set the verification callback (Optional).
 -}

-}_
-}_

-}_
-}_

-}_
-}_

-}_{- MBEDTLS_X509_CRT_PARSE_C -}
-}_

{-*
 * \brief          Set the underlying BIO callbacks for write, read and
 *                 read-with-timeout.
 -}

-}_
-}_

-}_
-}_

-}_
-}_


-}_
-}_

-}_
-}_

-}_
-}_



-}_
-}_


-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

-}_
-}_

{-*
 * \brief          Set the Diffie-Hellman public P and G values,
 *                 read as hexadecimal strings (server-side only)
 *                 (Default values: MBEDTLS_DHM_RFC3526_MODP_2048_[PG])
 *
 * \param conf     SSL configuration
 * \param dhm_P    Diffie-Hellman-Merkle modulus
 * \param dhm_G    Diffie-Hellman-Merkle generator
 *
 * \deprecated     Superseded by \c mbedtls_ssl_conf_dh_param_bin.
 *
 * \return         0 if successful
 -}

-}_
-}_

-}_
-}_

-}_
-}_


-}_{- MBEDTLS_DEPRECATED_REMOVED -}
-}_


-}_
-}_

-}_
-}_

-}_
-}_


-}_{- ssl.h -}
-}_
