-- Function definitions

cogent_ffv1 : () -> ()
cogent_ffv1 () = ()
cogent_ffv2 : () -> ()
cogent_ffv2 () = ()

cogent_ffv11 : MayNull (CPtr U32) -> ()
cogent_ffv11 i = () -- i: -ar
cogent_ffv12 : MayNull (CPtr U32) -> ( (), MayNull (CPtr U32) )
cogent_ffv12 i = ((), i)
cogent_ffv13 : MayNull (CPtr U32) -> ()
cogent_ffv13 i = () -- i: -ar
cogent_ffv14 : MayNull (CPtr U32) -> ( (), MayNull (CPtr U32) )
cogent_ffv14 i =
   (()
   , let i { cont = _ } = i
   in i { cont = 5 })
cogent_ffv15 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ()
cogent_ffv15 (i, j) = () -- i: -ar, j: -ar
cogent_ffv16 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( (), MayNull (CPtr U32) )
cogent_ffv16 (i, j) =
   let i = (if 0 > 0
         then let j { cont = p1' } = j
            and i { cont = _ } = i
            in i { cont = p1' }
         else let j { cont = p1' } = j
            and i { cont = _ } = i
            in i { cont = p1' }) !j
   in ((), i) -- j: -ar
cogent_ffv17 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( (), MayNull (CPtr U32) )
cogent_ffv17 (i, j) =
   (()
   , let j = let j { cont = p1' } = j
      in j { cont = p1' }
   in if 0 > 0
      then j
      else let j { cont = _ } = j
         in j { cont = 5 }) -- i: -ar
cogent_ffv18 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32) )
cogent_ffv18 (i, j) =
   (()
   , if 0 > 0
   then let j { cont = p1' } = j
      and i { cont = _ } = i
      in i { cont = p1' }
   else let j { cont = p1' } = j
      and i { cont = _ } = i
      in i { cont = p1' }
   , let j = let j { cont = p1' } = j
      in j { cont = p1' }
   in if 0 > 0
      then j
      else let j { cont = _ } = j
         in j { cont = 5 })

type GlobState1 = CPtr U32 -- glob1: gs1
type GlobState2 = CPtr U32 -- glob2: gs2

cogent_ffv21 : GlobState1 -> ( (), GlobState1 )
cogent_ffv21 g = ((), g) -- g: gs1
cogent_ffv22 : GlobState2 -> ( (), GlobState2 )
cogent_ffv22 g = ((), g) -- g: gs2
cogent_ffv23 : ( GlobState1, GlobState2 ) -> ( (), GlobState1, GlobState2 )
cogent_ffv23 (g1, g2) =
   ((), g1, g2) -- g1: gs1, g2: gs2
cogent_ffv24 : ( GlobState1, GlobState2 ) -> ( (), GlobState1, GlobState2 )
cogent_ffv24 (g1, g2) =
   ((), g1, g2) -- g2: gs2, g1: gs1
cogent_ffv25 : GlobState1 -> ( (), GlobState1 )
cogent_ffv25 g =
   (()
   , let g { cont = _ } = g
   in g { cont = 5 }) -- g: gs1
cogent_ffv26 : GlobState1 -> ( (), GlobState1 )
cogent_ffv26 g = ((), g) -- g: gs1 (!)
cogent_ffv27 : GlobState1 -> ( (), GlobState1 )
cogent_ffv27 g =
   (()
   , let g { cont = p0' } = g
   in g { cont = p0' + 1 }) -- g: gs1
cogent_ffv28 : ( GlobState1, GlobState2 ) -> ( (), GlobState1, GlobState2 )
cogent_ffv28 (g1, g2) =
   let g1 = (let g2 { cont = p1' } = g2
         and g1 { cont = _ } = g1
         in g1 { cont = p1' }) !g2
   in ((), g1, g2) -- g1: gs1, g2: gs2

cogent_ffv31 : ( MayNull (CPtr U32), GlobState1 ) -> ( (), GlobState1 )
cogent_ffv31 (i, g) =
   let g = (let i { cont = p1' } = i
         and g { cont = _ } = g
         in g { cont = p1' }) !i
   in ((), g) -- i: -ar, g: gs1
cogent_ffv32 : ( MayNull (CPtr U32), GlobState1 ) -> ( (), MayNull (CPtr U32), GlobState1 )
cogent_ffv32 (i, g) =
   let i = (let g { cont = p1' } = g
         and i { cont = _ } = i
         in i { cont = p1' }) !g
   in ((), i, g) -- g: gs1
cogent_ffv33 : ( MayNull (CPtr U32), GlobState1 ) -> ( (), MayNull (CPtr U32), GlobState1 )
cogent_ffv33 (i, g) =
   (()
   , let g { cont = p1' } = g
   and i { cont = _ } = i
   in i { cont = p1' }
   , let g { cont = p1' } = g
   in g { cont = p1' + 1 }) -- g: gs1
cogent_ffv34 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 ) -> ( (), MayNull (CPtr U32), GlobState1 )
cogent_ffv34 (i, j, g) =
   let (i, g) = (let (i
                     , g) = (let g { cont = p1' } = g
                            and i { cont = _ } = i
                            in i { cont = p1' }
                            , let g { cont = p1' } = g
                            in g { cont = p1' })
         in if 0 > 0
            then (i, g)
            else (i
                 , let j { cont = p3' } = j
                 and g { cont = _ } = g
                 in g { cont = p3' })) !j
   in ((), i, g) -- j: -ar, g: gs1
cogent_ffv35 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 )
cogent_ffv35 (i, j, g) =
   let (i, g) = (let (i
                     , g) = (let g { cont = p1' } = g
                            and i { cont = _ } = i
                            in i { cont = p1' }
                            , let g { cont = p1' } = g
                            in g { cont = p1' })
         in if 0 > 0
            then (i, g)
            else (i
                 , let j { cont = p3' } = j
                 and g { cont = _ } = g
                 in g { cont = p3' })) !j
   in ((), i, j, g) -- g: gs1
cogent_ffv36 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, GlobState2 ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, GlobState2 )
cogent_ffv36 (i, j, g1, g2) =
   let (i, g2) = (if 0 > 0
         then (let g1 { cont = p1' } = g1
              and i { cont = _ } = i
              in i { cont = p1' }
              , g2)
         else (let g1 { cont = p1' } = g1
              and i { cont = _ } = i
              in i { cont = p1' }
              , let j { cont = p3' } = j
              and g2 { cont = _ } = g2
              in g2 { cont = p3' })) !j !g1
   in ((), i, j, g1, g2) -- g1: gs1, g2: gs2

cogent_ffv41 : Heap -> ( (), Heap )
cogent_ffv41 heap = ((), heap) -- ffv41: hu
cogent_ffv42 : ( GlobState1, Heap ) -> ( (), GlobState1, Heap )
cogent_ffv42 (g, heap) =
   ((), g, heap) -- ffv42: hu, g: gs1
cogent_ffv43 : ( MayNull (CPtr U32), Heap ) -> ( (), Heap )
cogent_ffv43 (i, heap) =
   ((), heap) -- i: -ar, ffv43: hu
cogent_ffv44 : ( MayNull (CPtr U32), Heap ) -> ( (), MayNull (CPtr U32), Heap )
cogent_ffv44 (i, heap) =
   (()
   , let i { cont = _ } = i
   in i { cont = 5 }
   , heap) -- ffv44: hu
cogent_ffv45 : ( MayNull (CPtr U32), GlobState1, Heap ) -> ( (), GlobState1, Heap )
cogent_ffv45 (i, g, heap) =
   let g = (let i { cont = p1' } = i
         and g { cont = _ } = g
         in g { cont = p1' }) !i
   in ((), g, heap) -- i: -ar, g: gs1, ffv45: hu
cogent_ffv46 : ( MayNull (CPtr U32), GlobState1, Heap ) -> ( (), MayNull (CPtr U32), GlobState1, Heap )
cogent_ffv46 (i, g, heap) =
   let i = (let g { cont = p1' } = g
         and i { cont = _ } = i
         in i { cont = p1' }) !g
   in ((), i, g, heap) -- g: gs1, ffv46: hu
cogent_ffv47 : ( MayNull (CPtr U32), MayNull (CPtr U32), Heap ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32), Heap )
cogent_ffv47 (i, j, heap) =
   let i = (if 0 > 0
         then let i { cont = _ } = i
            in i { cont = gencotDummy "Cannot access global variable: glob1" }
         else let i { cont = _ } = i
            in i { cont = gencotDummy "Cannot access global variable: glob1" }) !j
   in ((), i, j, heap) -- ffv47: hu
cogent_ffv48 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap )
cogent_ffv48 (i, j, g, heap) =
   let (i, g) = (let (i
                     , g) = (let g { cont = p1' } = g
                            and i { cont = _ } = i
                            in i { cont = p1' }
                            , let g { cont = p1' } = g
                            in g { cont = p1' })
         in if 0 > 0
            then (i, g)
            else (i
                 , let j { cont = p3' } = j
                 and g { cont = _ } = g
                 in g { cont = p3' })) !j
   in ((), i, j, g, heap) -- g: gs1, ffv48: hu


cogent_ffi1 : () -> U32
cogent_ffi1 () = 5

cogent_ffi11 : MayNull (CPtr U32) -> U32
cogent_ffi11 i = 5 -- i: -ar
cogent_ffi12 : MayNull (CPtr U32) -> ( U32, MayNull (CPtr U32) )
cogent_ffi12 i = (5, i)
cogent_ffi13 : MayNull (CPtr U32) -> U32
cogent_ffi13 i =
   if 0 > 0 then r' else 2 -- i: -ar 
cogent_ffi14 : MayNull (CPtr U32) -> ( U32, MayNull (CPtr U32) )
cogent_ffi14 i =
   (if 0 > 0 then r' else 2
   , if 0 > 0
   then let i { cont = _ } = i
      in i { cont = 5 }
   else let i { cont = _ } = i
      in i { cont = 5 })
cogent_ffi15 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> U32
cogent_ffi15 (i, j) =
   if 0 > 0
   then r'
   else if 0 > 0 then r' else 2 -- i: -ar, j: -ar 
cogent_ffi16 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( U32, MayNull (CPtr U32) )
cogent_ffi16 (i, j) =
   let (i, r') = (if 0 > 0
         then (let j { cont = p1' } = j
              and i { cont = _ } = i
              in i { cont = p1' }
              , r')
         else (let j { cont = p1' } = j
              and i { cont = _ } = i
              in i { cont = p1' }
              , if 0 > 0 then r' else 2)) !j
   in (r', i) -- j: -ar
cogent_ffi17 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( U32, MayNull (CPtr U32) )
cogent_ffi17 (i, j) =
   (if 0 > 0
   then r'
   else if 0 > 0 then r' else 2
   , let j = let j { cont = p1' } = j
      in j { cont = p1' }
   in if 0 > 0
      then j
      else if 0 > 0
         then let j { cont = _ } = j
            in j { cont = 5 }
         else let j { cont = _ } = j
            in j { cont = 5 }) -- i: -ar
cogent_ffi18 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32) )
cogent_ffi18 (i, j) =
   (if 0 > 0
   then r'
   else if 0 > 0 then r' else 2
   , if 0 > 0
   then let j { cont = p1' } = j
      and i { cont = _ } = i
      in i { cont = p1' }
   else let j { cont = p1' } = j
      and i { cont = _ } = i
      in i { cont = p1' }
   , let j = let j { cont = p1' } = j
      in j { cont = p1' }
   in if 0 > 0
      then j
      else if 0 > 0
         then let j { cont = _ } = j
            in j { cont = 5 }
         else let j { cont = _ } = j
            in j { cont = 5 })

cogent_ffi21 : GlobState1 -> ( U32, GlobState1 )
cogent_ffi21 g = (5, g) -- g: gs1
cogent_ffi22 : GlobState2 -> ( U32, GlobState2 )
cogent_ffi22 g = (5, g) -- g: gs2
cogent_ffi23 : ( GlobState1, GlobState2 ) -> ( U32, GlobState1, GlobState2 )
cogent_ffi23 (g1, g2) =
   (5, g1, g2) -- g1: gs1, g2: gs2
cogent_ffi24 : ( GlobState1, GlobState2 ) -> ( U32, GlobState1, GlobState2 )
cogent_ffi24 (g1, g2) =
   (5, g1, g2) -- g2: gs2, g1: gs1
cogent_ffi25 : GlobState1 -> ( U32, GlobState1 )
cogent_ffi25 g =
   (if 0 > 0 then r' else 2
   , if 0 > 0
   then let g { cont = _ } = g
      in g { cont = 5 }
   else let g { cont = _ } = g
      in g { cont = 5 }) -- g: gs1
cogent_ffi26 : GlobState1 -> ( U32, GlobState1 )
cogent_ffi26 g =
   (if 0 > 0 then r' else 2, g) -- g: gs1 (!)
cogent_ffi27 : GlobState1 -> ( U32, GlobState1 )
cogent_ffi27 g =
   (if 0 > 0 then r' else 2
   , if 0 > 0
   then let g { cont = p0' } = g
      in g { cont = p0' + 1 }
   else let g { cont = p0' } = g
      in g { cont = p0' + 1 }) -- g: gs1
cogent_ffi28 : ( GlobState1, GlobState2 ) -> ( U32, GlobState1, GlobState2 )
cogent_ffi28 (g1, g2) =
   let (g1, r') = (if 0 > 0
         then (let g2 { cont = p1' } = g2
              and g1 { cont = _ } = g1
              in g1 { cont = p1' }
              , r')
         else (let g2 { cont = p1' } = g2
              and g1 { cont = _ } = g1
              in g1 { cont = p1' }
              , 2)) !g2
   in (r', g1, g2) -- g1: gs1, g2: gs2

cogent_ffi31 : ( MayNull (CPtr U32), GlobState1 ) -> ( U32, GlobState1 )
cogent_ffi31 (i, g) =
   let (g, r') = (if 0 > 0
         then (let i { cont = p1' } = i
              and g { cont = _ } = g
              in g { cont = p1' }
              , r')
         else (let i { cont = p1' } = i
              and g { cont = _ } = g
              in g { cont = p1' }
              , 2)) !i
   in (r', g) -- i: -ar, g: gs1
cogent_ffi32 : ( MayNull (CPtr U32), GlobState1 ) -> ( U32, MayNull (CPtr U32), GlobState1 )
cogent_ffi32 (i, g) =
   let (i, r') = (if 0 > 0
         then (let g { cont = p1' } = g
              and i { cont = _ } = i
              in i { cont = p1' }
              , r')
         else (let g { cont = p1' } = g
              and i { cont = _ } = i
              in i { cont = p1' }
              , 2)) !g
   in (r', i, g) -- g: gs1
cogent_ffi33 : ( MayNull (CPtr U32), GlobState1 ) -> ( U32, MayNull (CPtr U32), GlobState1 )
cogent_ffi33 (i, g) =
   (if 0 > 0 then r' else 2
   , if 0 > 0
   then let g { cont = p1' } = g
      and i { cont = _ } = i
      in i { cont = p1' }
   else let g { cont = p1' } = g
      and i { cont = _ } = i
      in i { cont = p1' }
   , if 0 > 0
   then let g { cont = p1' } = g
      in g { cont = p1' + 1 }
   else let g { cont = p1' } = g
      in g { cont = p1' + 1 }) -- g: gs1
cogent_ffi34 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 ) -> ( U32, MayNull (CPtr U32), GlobState1 )
cogent_ffi34 (i, j, g) =
   let (i, g, r') = (let (i
                         , g) = (let g { cont = p1' } = g
                                and i { cont = _ } = i
                                in i { cont = p1' }
                                , let g { cont = p1' } = g
                                in g { cont = p1' })
         in if 0 > 0
            then (i, g, r')
            else (i
                 , if 0 > 0
                 then let j { cont = p3' } = j
                    and g { cont = _ } = g
                    in g { cont = p3' }
                 else let j { cont = p3' } = j
                    and g { cont = _ } = g
                    in g { cont = p3' }
                 , if 0 > 0 then r' else 2)) !j
   in (r', i, g) -- j: -ar, g: gs1
cogent_ffi35 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 )
cogent_ffi35 (i, j, g) =
   let (i, g, r') = (let (i
                         , g) = (let g { cont = p1' } = g
                                and i { cont = _ } = i
                                in i { cont = p1' }
                                , let g { cont = p1' } = g
                                in g { cont = p1' })
         in if 0 > 0
            then (i, g, r')
            else (i
                 , if 0 > 0
                 then let j { cont = p3' } = j
                    and g { cont = _ } = g
                    in g { cont = p3' }
                 else let j { cont = p3' } = j
                    and g { cont = _ } = g
                    in g { cont = p3' }
                 , if 0 > 0 then r' else 2)) !j
   in (r', i, j, g) -- g: gs1
cogent_ffi36 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, GlobState2 ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, GlobState2 )
cogent_ffi36 (i, j, g1, g2) =
   let (i, g1, r') = (if 0 > 0
         then (let g2 { cont = p1' } = g2
              and i { cont = _ } = i
              in i { cont = p1' }
              , g1
              , r')
         else (let g2 { cont = p1' } = g2
              and i { cont = _ } = i
              in i { cont = p1' }
              , if 0 > 0
              then let j { cont = p3' } = j
                 and g1 { cont = _ } = g1
                 in g1 { cont = p3' }
              else let j { cont = p3' } = j
                 and g1 { cont = _ } = g1
                 in g1 { cont = p3' }
              , if 0 > 0
              then r'
              else 2)) !j !g2
   in (r', i, j, g1, g2) -- g1: gs1, g2: gs2

cogent_ffi41 : Heap -> ( U32, Heap )
cogent_ffi41 heap = (5, heap) -- ffv41: hu
cogent_ffi42 : ( GlobState1, Heap ) -> ( U32, GlobState1, Heap )
cogent_ffi42 (g, heap) =
   (5, g, heap) -- ffv41: hu, g: gs1
cogent_ffi43 : ( MayNull (CPtr U32), Heap ) -> ( U32, Heap )
cogent_ffi43 (i, heap) =
   (if 0 > 0 then r' else 2, heap) -- i: -ar, ffv43: hu
cogent_ffi44 : ( MayNull (CPtr U32), Heap ) -> ( U32, MayNull (CPtr U32), Heap )
cogent_ffi44 (i, heap) =
   (if 0 > 0 then r' else 2
   , if 0 > 0
   then let i { cont = _ } = i
      in i { cont = 5 }
   else let i { cont = _ } = i
      in i { cont = 5 }
   , heap) -- ffv44: hu
cogent_ffi45 : ( MayNull (CPtr U32), GlobState1, Heap ) -> ( U32, GlobState1, Heap )
cogent_ffi45 (i, g, heap) =
   let (g, r') = (if 0 > 0
         then (let i { cont = p1' } = i
              and g { cont = _ } = g
              in g { cont = p1' }
              , r')
         else (let i { cont = p1' } = i
              and g { cont = _ } = g
              in g { cont = p1' }
              , 2)) !i
   in (r', g, heap) -- i: -ar, g: gs1, ffv45: hu
cogent_ffi46 : ( MayNull (CPtr U32), GlobState1, Heap ) -> ( U32, MayNull (CPtr U32), GlobState1, Heap )
cogent_ffi46 (i, g, heap) =
   let (i, r') = (if 0 > 0
         then (let g { cont = p1' } = g
              and i { cont = _ } = i
              in i { cont = p1' }
              , r')
         else (let g { cont = p1' } = g
              and i { cont = _ } = i
              in i { cont = p1' }
              , 2)) !g
   in (r', i, g, heap) -- g: gs1, ffv46: hu
cogent_ffi47 : ( MayNull (CPtr U32), MayNull (CPtr U32), Heap ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32), Heap )
cogent_ffi47 (i, j, heap) =
   let (i, r') = (if 0 > 0
         then (let i { cont = _ } = i
              in i { cont = gencotDummy "Cannot access global variable: glob1" }
              , r')
         else (let i { cont = _ } = i
              in i { cont = gencotDummy "Cannot access global variable: glob1" }
              , if 0 > 0 then r' else 2)) !j
   in (r', i, j, heap) -- ffv47: hu (Error: no parameter for glob1)
cogent_ffi48 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap )
cogent_ffi48 (i, j, g, heap) =
   let (i, g, r') = (let (i
                         , g) = (let g { cont = p1' } = g
                                and i { cont = _ } = i
                                in i { cont = p1' }
                                , let g { cont = p1' } = g
                                in g { cont = p1' })
         in if 0 > 0
            then (i, g, r')
            else (i
                 , if 0 > 0
                 then let j { cont = p3' } = j
                    and g { cont = _ } = g
                    in g { cont = p3' }
                 else let j { cont = p3' } = j
                    and g { cont = _ } = g
                    in g { cont = p3' }
                 , if 0 > 0 then r' else 2)) !j
   in (r', i, j, g, heap) -- g: gs1, ffv48: hu
cogent_ffi49 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap )
cogent_ffi49 (i, j, g, heap) =
   let (i, r') = (if 0 > 0
         then (let j { cont = p1' } = j
              and i { cont = _ } = i
              in i { cont = p1' }
              , r')
         else (let j { cont = p1' } = j
              and i { cont = _ } = i
              in i { cont = p1' }
              , 2)) !j
   in (r', i, j, g, heap) -- g: gs1, ffv49: hu


-- Function calls

cogent_cffv1 : () -> ()
cogent_cffv1 () = ()

cogent_cffv11 : MayNull (CPtr U32) -> ( (), MayNull (CPtr U32) )
cogent_cffv11 i = ((), i)
cogent_cffv12 : MayNull (CPtr U32) -> ( (), MayNull (CPtr U32) )
cogent_cffv12 i =
   (()
   , let (_, i) = cogent_ffv12 i
   in i)
cogent_cffv15 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32) )
cogent_cffv15 (i, j) =
   ((), i, j)
cogent_cffv16 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32) )
cogent_cffv16 (i, j) =
   (()
   , let (_, i) = cogent_ffv16 (i
                               , j)
   in i
   , j)
cogent_cffv17 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32) )
cogent_cffv17 (i, j) =
   (()
   , i
   , let (_, j) = cogent_ffv17 (i
                               , j)
   in j)
cogent_cffv18 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32) )
cogent_cffv18 (i, j) =
   (()
   , let (_
         , i
         , _) = cogent_ffv18 (i, j)
   in i
   , let (_
         , _
         , j) = cogent_ffv18 (i, j)
   in j)

cogent_cffv21 : GlobState1 -> ( (), GlobState1 )
cogent_cffv21 g =
   (()
   , let (_, g) = cogent_ffv21 g
   in g) -- g: gs1
cogent_cffv22 : GlobState1 -> ( (), GlobState1 )
cogent_cffv22 g = ((), g) -- g: gs1 (Error: no argument for gs2)
cogent_cffv23 : ( GlobState1, GlobState2 ) -> ( (), GlobState1, GlobState2 )
cogent_cffv23 (g1, g2) =
   (()
   , let (_
         , g1
         , _) = cogent_ffv23 (g1, g2)
   in g1
   , let (_
         , _
         , g2) = cogent_ffv23 (g1, g2)
   in g2) -- g1: gs1, g2: gs2

cogent_cffv31 : ( MayNull (CPtr U32), GlobState1 ) -> ( (), MayNull (CPtr U32), GlobState1 )
cogent_cffv31 (i, g) =
   (()
   , i
   , let (_, g) = cogent_ffv31 (i
                               , g)
   in g) -- g: gs1
cogent_cffv32 : ( MayNull (CPtr U32), GlobState1 ) -> ( (), MayNull (CPtr U32), GlobState1 )
cogent_cffv32 (i, g) =
   (()
   , let (_
         , i
         , _) = cogent_ffv32 (i, g)
   in i
   , let (_
         , _
         , g) = cogent_ffv32 (i, g)
   in g) -- g: gs1
cogent_cffv34 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 )
cogent_cffv34 (i, j, g) =
   (()
   , let (_
         , i
         , _) = cogent_ffv34 (i, j, g)
   in i
   , j
   , let (_
         , _
         , g) = cogent_ffv34 (i, j, g)
   in g) -- g: gs1
cogent_cffv35 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 )
cogent_cffv35 (i, j, g) =
   (()
   , let (_
         , i
         , _
         , _) = cogent_ffv35 (i, j, g)
   in i
   , let (_
         , _
         , j
         , _) = cogent_ffv35 (i, j, g)
   in j
   , let (_
         , _
         , _
         , g) = cogent_ffv35 (i, j, g)
   in g) -- g: gs1
cogent_cffv36 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, GlobState2 ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, GlobState2 )
cogent_cffv36 (i, j, g1, g2) =
   (()
   , let (_
         , i
         , _
         , _
         , _) = cogent_ffv36 (i
                             , j
                             , g1
                             , g2)
   in i
   , let (_
         , _
         , j
         , _
         , _) = cogent_ffv36 (i
                             , j
                             , g1
                             , g2)
   in j
   , let (_
         , _
         , _
         , g1
         , _) = cogent_ffv36 (i
                             , j
                             , g1
                             , g2)
   in g1
   , let (_
         , _
         , _
         , _
         , g2) = cogent_ffv36 (i
                              , j
                              , g1
                              , g2)
   in g2) -- g1: gs1, g2: gs2

cogent_cffv41 : Heap -> ( (), Heap )
cogent_cffv41 heap =
   (()
   , let (_
         , heap) = cogent_ffv41 heap
   in heap) -- cffv41: hu
cogent_cffv42 : ( GlobState1, Heap ) -> ( (), GlobState1, Heap )
cogent_cffv42 (g, heap) =
   (()
   , let (_
         , g
         , _) = cogent_ffv42 (g, heap)
   in g
   , let (_
         , _
         , heap) = cogent_ffv42 (g, heap)
   in heap) -- cffv41: hu, g: gs1
cogent_cffv43 : ( MayNull (CPtr U32), Heap ) -> ( (), MayNull (CPtr U32), Heap )
cogent_cffv43 (i, heap) =
   (()
   , i
   , let (_
         , heap) = cogent_ffv43 (i, heap)
   in heap) -- cffv43: hu
cogent_cffv44 : ( MayNull (CPtr U32), Heap ) -> ( (), MayNull (CPtr U32), Heap )
cogent_cffv44 (i, heap) =
   (()
   , let (_
         , i
         , _) = cogent_ffv44 (i, heap)
   in i
   , let (_
         , _
         , heap) = cogent_ffv44 (i, heap)
   in heap) -- cffv44: hu
cogent_cffv45 : ( MayNull (CPtr U32), GlobState1, Heap ) -> ( (), MayNull (CPtr U32), GlobState1, Heap )
cogent_cffv45 (i, g, heap) =
   (()
   , i
   , let (_
         , g
         , _) = cogent_ffv45 (i, g, heap)
   in g
   , let (_
         , _
         , heap) = cogent_ffv45 (i
                                , g
                                , heap)
   in heap) -- g: gs1, cffv45: hu
cogent_cffv46 : ( MayNull (CPtr U32), GlobState1, Heap ) -> ( (), MayNull (CPtr U32), GlobState1, Heap )
cogent_cffv46 (i, g, heap) =
   (()
   , let (_
         , i
         , _
         , _) = cogent_ffv46 (i, g, heap)
   in i
   , let (_
         , _
         , g
         , _) = cogent_ffv46 (i, g, heap)
   in g
   , let (_
         , _
         , _
         , heap) = cogent_ffv46 (i
                                , g
                                , heap)
   in heap) -- g: gs1, cffv46: hu
cogent_cffv47 : ( MayNull (CPtr U32), MayNull (CPtr U32), Heap ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32), Heap )
cogent_cffv47 (i, j, heap) =
   (()
   , let (_
         , i
         , _
         , _) = cogent_ffv47 (i, j, heap)
   in i
   , let (_
         , _
         , j
         , _) = cogent_ffv47 (i, j, heap)
   in j
   , let (_
         , _
         , _
         , heap) = cogent_ffv47 (i
                                , j
                                , heap)
   in heap) -- cffv47: hu
cogent_cffv48 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap ) -> ( (), MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap )
cogent_cffv48 (i, j, g, heap) =
   (()
   , let (_
         , i
         , _
         , _
         , _) = cogent_ffv48 (i
                             , j
                             , g
                             , heap)
   in i
   , let (_
         , _
         , j
         , _
         , _) = cogent_ffv48 (i
                             , j
                             , g
                             , heap)
   in j
   , let (_
         , _
         , _
         , g
         , _) = cogent_ffv48 (i
                             , j
                             , g
                             , heap)
   in g
   , let (_
         , _
         , _
         , _
         , heap) = cogent_ffv48 (i
                                , j
                                , g
                                , heap)
   in heap) -- g: gs1, cffv48: hu

cogent_cffi1 : () -> U32
cogent_cffi1 () = cogent_ffi1 ()

cogent_cffi11 : MayNull (CPtr U32) -> ( U32, MayNull (CPtr U32) )
cogent_cffi11 i =
   (cogent_ffi11 i, i)
cogent_cffi12 : MayNull (CPtr U32) -> ( U32, MayNull (CPtr U32) )
cogent_cffi12 i = cogent_ffi12 i
cogent_cffi15 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32) )
cogent_cffi15 (i, j) =
   (cogent_ffi15 (i, j), i, j)
cogent_cffi16 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32) )
cogent_cffi16 (i, j) =
   let (r', i) = cogent_ffi16 (i
                              , j)
   in (r', i, j)
cogent_cffi17 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32) )
cogent_cffi17 (i, j) =
   let (r', j) = cogent_ffi17 (i
                              , j)
   in (r', i, j)
cogent_cffi18 : ( MayNull (CPtr U32), MayNull (CPtr U32) ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32) )
cogent_cffi18 (i, j) =
   cogent_ffi18 (i, j)

cogent_cffi21 : GlobState1 -> ( U32, GlobState1 )
cogent_cffi21 g = cogent_ffi21 g -- g: gs1
cogent_cffi22 : GlobState2 -> ( U32, GlobState2 )
cogent_cffi22 g = cogent_ffi22 g -- g: gs2
cogent_cffi23 : ( GlobState1, GlobState2 ) -> ( U32, GlobState1, GlobState2 )
cogent_cffi23 (g1, g2) =
   cogent_ffi23 (g1, g2) -- g1: gs1, g2: gs2

cogent_cffi31 : ( MayNull (CPtr U32), GlobState1 ) -> ( U32, MayNull (CPtr U32), GlobState1 )
cogent_cffi31 (i, g) =
   let (r', g) = cogent_ffi31 (i
                              , g)
   in (r', i, g) -- g: gs1
cogent_cffi32 : ( MayNull (CPtr U32), GlobState1 ) -> ( U32, MayNull (CPtr U32), GlobState1 )
cogent_cffi32 (i, g) =
   cogent_ffi32 (i, g) -- g: gs1
cogent_cffi34 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 )
cogent_cffi34 (i, j, g) =
   let (r', i, g) = cogent_ffi34 (i
                                 , j
                                 , g)
   in (r', i, j, g) -- g: gs1
cogent_cffi35 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32), GlobState1 )
cogent_cffi35 (i, j, g) =
   cogent_ffi35 (i, j, g) -- g: gs1
cogent_cffi36 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, GlobState2 ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, GlobState2 )
cogent_cffi36 (i, j, g1, g2) =
   cogent_ffi36 (i, j, g1, g2) -- g1: gs1, g2: gs2

cogent_cffi41 : Heap -> ( U32, Heap )
cogent_cffi41 heap =
   cogent_ffi41 heap -- cffv41: hu
cogent_cffi42 : ( GlobState1, Heap ) -> ( U32, GlobState1, Heap )
cogent_cffi42 (g, heap) =
   cogent_ffi42 (g, heap) -- cffv41: hu, g: gs1
cogent_cffi43 : ( MayNull (CPtr U32), Heap ) -> ( U32, MayNull (CPtr U32), Heap )
cogent_cffi43 (i, heap) =
   let (r', heap) = cogent_ffi43 (i
                                 , heap)
   in (r', i, heap) -- cffv43: hu
cogent_cffi44 : ( MayNull (CPtr U32), Heap ) -> ( U32, MayNull (CPtr U32), Heap )
cogent_cffi44 (i, heap) =
   cogent_ffi44 (i, heap) -- cffv44: hu
cogent_cffi45 : ( MayNull (CPtr U32), GlobState1, Heap ) -> ( U32, MayNull (CPtr U32), GlobState1, Heap )
cogent_cffi45 (i, g, heap) =
   let (r'
       , g
       , heap) = cogent_ffi45 (i
                              , g
                              , heap)
   in (r', i, g, heap) -- g: gs1, cffv45: hu
cogent_cffi46 : ( MayNull (CPtr U32), GlobState1, Heap ) -> ( U32, MayNull (CPtr U32), GlobState1, Heap )
cogent_cffi46 (i
              , heap
              , globheap1) =
   cogent_ffi46 (i
                , heap
                , globheap1) -- heap: gs1, cffv46: hu
cogent_cffi48 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap )
cogent_cffi48 (i, j, g, heap) =
   cogent_ffi48 (i, j, g, heap) -- g: gs1, cffv48: hu
cogent_cffi49 : ( MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap ) -> ( U32, MayNull (CPtr U32), MayNull (CPtr U32), GlobState1, Heap )
cogent_cffi49 (i, j, g, heap) =
   cogent_ffi49 (i, j, g, heap) -- g: gs1, cffv49: hu
