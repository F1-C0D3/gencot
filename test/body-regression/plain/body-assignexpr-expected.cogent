cogent_fac1 : U32 -> U32
cogent_fac1 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 42
         and v1' = v
         and v2' = v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fac2 : U8 -> U8
cogent_fac2 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 'x'
         and v1' = v
         and v2' = v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fac4 : String -> String
cogent_fac4 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = "abc"
         and v1' = v
         and v2' = v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fac5 : err-float -> err-float
cogent_fac5 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = gencotDummy "Float literals not supported"
            {- v = 1.5, v; -}
         and v1' = v
         and v2' = v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fav1 : ( U32, U32 ) -> U32
cogent_fav1 (v, w) =
   let (c', r', v) = let (v4'
                         , v) = let v' = w
         and v1' = v
         and v2' = v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fav2 : ( U32, U32 ) -> U32
cogent_fav2 (xyz_123, w) =
   let (c', r', xyz_123) = let (v4'
                               , xyz_123) = let v' = w
         and v1' = xyz_123
         and v2' = v'
         and (v3', xyz_123) = (v2', v2')
         and v4' = xyz_123
         in (v4', xyz_123)
      in (3, v4', xyz_123)
   in r'
cogent_fao1 : U32 -> U32
cogent_fao1 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 42
         and v1' = v
         and v2' = v1' + v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fao2 : U32 -> U32
cogent_fao2 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 42
         and v1' = v
         and v2' = v1' - v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fao3 : U32 -> U32
cogent_fao3 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 42
         and v1' = v
         and v2' = v1' * v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fao4 : U32 -> U32
cogent_fao4 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 42
         and v1' = v
         and v2' = v1' / v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fao5 : U32 -> U32
cogent_fao5 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 42
         and v1' = v
         and v2' = v1' % v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fao6 : U32 -> U32
cogent_fao6 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 4
         and v1' = v
         and v2' = v1' << v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fao7 : U32 -> U32
cogent_fao7 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 4
         and v1' = v
         and v2' = v1' >> v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fao8 : U32 -> U32
cogent_fao8 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 4
         and v1' = v
         and v2' = v1' .&. v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fao9 : U32 -> U32
cogent_fao9 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 4
         and v1' = v
         and v2' = v1' .|. v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fao10 : U32 -> U32
cogent_fao10 v =
   let (c', r', v) = let (v4'
                         , v) = let v' = 4
         and v1' = v
         and v2' = v1' .^. v'
         and (v3', v) = (v2', v2')
         and v4' = v
         in (v4', v)
      in (3, v4', v)
   in r'
cogent_fao11 : U32 -> U32
cogent_fao11 v =
   let (c', r', v) = let (v3'
                         , v) = let v' = 1
         and v1' = v
         and v2' = v1' + v'
         and (v3', v) = (v, v2')
         in (v3', v)
      in (3, v3', v)
   in r'
cogent_fao12 : U32 -> U32
cogent_fao12 v =
   let (c', r', v) = let (v3'
                         , v) = let v' = 1
         and v1' = v
         and v2' = v1' - v'
         and (v3', v) = (v, v2')
         in (v3', v)
      in (3, v3', v)
   in r'
cogent_fao13 : U32 -> U32
cogent_fao13 v =
   let (c', r', v) = let (v3'
                         , v) = let v' = 1
         and v1' = v
         and v2' = v1' + v'
         and (v3', v) = (v2', v2')
         in (v3', v)
      in (3, v3', v)
   in r'
cogent_fao14 : U32 -> U32
cogent_fao14 v =
   let (c', r', v) = let (v3'
                         , v) = let v' = 1
         and v1' = v
         and v2' = v1' - v'
         and (v3', v) = (v2', v2')
         in (v3', v)
      in (3, v3', v)
   in r'

type Struct_Cogent_as1 = { m1 : U32, m2 : U32 }
type Struct_Cogent_as2 = { m3 : U32, m4 : #Struct_Cogent_as1 }
cogent_fas1 : ( #Struct_Cogent_as1, U32 ) -> U32
cogent_fas1 (s, v) =
   let (c', r', s, v) = let (v5'
                            , s
                            , v) = let v' = s
         and s { m1 = p0' } = v'
         and v1' = p0'
         and s = s { m1 = p0' }
         and v2' = v
         and v3' = v1'
         and (v4', v) = (v3', v3')
         and v5' = v
         in (v5', s, v)
      in (3, v5', s, v)
   in r'
cogent_fas2 : ( #Struct_Cogent_as1, U32 ) -> U32
cogent_fas2 (s, v) =
   let (c', r', s, v) = let (v8'
                            , s
                            , v) = let v' = s
         and s { m1 = p0' } = v'
         and v1' = p0'
         and s = s { m1 = p0' }
         and v2' = s
         and s { m2 = p1' } = v2'
         and v3' = p1'
         and s = s { m2 = p1' }
         and v4' = v1' + v3'
         and v5' = v
         and v6' = v4'
         and (v7', v) = (v6', v6')
         and v8' = v
         in (v8', s, v)
      in (3, v8', s, v)
   in r'
cogent_fas3 : ( #Struct_Cogent_as2, U32 ) -> U32
cogent_fas3 (s, v) =
   let (c', r', s, v) = let (v6'
                            , s
                            , v) = let v' = s
         and s { m4 = p0' } = v'
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v2' = p1'
         and p0' = p0' { m1 = p1' }
         and s = s { m4 = p0' }
         and v3' = v
         and v4' = v2'
         and (v5', v) = (v4', v4')
         and v6' = v
         in (v6', s, v)
      in (3, v6', s, v)
   in r'
cogent_fas4 : ( #Struct_Cogent_as2, U32 ) -> U32
cogent_fas4 (s, v) =
   let (c', r', s, v) = let (v13'
                            , s
                            , v) = let v' = s
         and s { m4 = p0' } = v'
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v2' = p1'
         and p0' = p0' { m1 = p1' }
         and s = s { m4 = p0' }
         and v3' = s
         and s { m4 = p2' } = v3'
         and v4' = p2'
         and p2' { m2 = p3' } = v4'
         and v5' = p3'
         and p2' = p2' { m2 = p3' }
         and s = s { m4 = p2' }
         and v6' = v2' + v5'
         and v7' = s
         and s { m3 = p4' } = v7'
         and v8' = p4'
         and s = s { m3 = p4' }
         and v9' = v6' + v8'
         and v10' = v
         and v11' = v9'
         and (v12', v) = (v11', v11')
         and v13' = v
         in (v13', s, v)
      in (3, v13', s, v)
   in r'
cogent_fas5 : #Struct_Cogent_as1 -> U32
cogent_fas5 s =
   let (c', r', s) = let (v6'
                         , s) = let v' = 42
         and v1' = s
         and s { m1 = p0' } = v1'
         and v2' = p0'
         and v3' = v'
         and (v4', p0') = (v3', v3')
         and s = s { m1 = p0' }
         and v5' = s
         and s { m1 = p1' } = v5'
         and v6' = p1'
         and s = s { m1 = p1' }
         in (v6', s)
      in (3, v6', s)
   in r'
cogent_fas6 : #Struct_Cogent_as2 -> U32
cogent_fas6 s =
   let (c', r', s) = let (v8'
                         , s) = let v' = 42
         and v1' = s
         and s { m4 = p0' } = v1'
         and v2' = p0'
         and p0' { m1 = p1' } = v2'
         and v3' = p1'
         and v4' = v'
         and (v5', p1') = (v4', v4')
         and p0' = p0' { m1 = p1' }
         and s = s { m4 = p0' }
         and v6' = s
         and s { m4 = p2' } = v6'
         and v7' = p2'
         and p2' { m1 = p3' } = v7'
         and v8' = p3'
         and p2' = p2' { m1 = p3' }
         and s = s { m4 = p2' }
         in (v8', s)
      in (3, v8', s)
   in r'
cogent_fas7 : #Struct_Cogent_as1 -> U32
cogent_fas7 s =
   let (c', r', s) = let (v4'
                         , s) = let v' = 1
         and v1' = s
         and s { m1 = p0' } = v1'
         and v2' = p0'
         and v3' = v2' + v'
         and (v4', p0') = (p0', v3')
         and s = s { m1 = p0' }
         in (v4', s)
      in (3, v4', s)
   in r'
cogent_fas8 : #Struct_Cogent_as2 -> U32
cogent_fas8 s =
   let (c', r', s) = let (v5'
                         , s) = let v' = 1
         and v1' = s
         and s { m4 = p0' } = v1'
         and v2' = p0'
         and p0' { m1 = p1' } = v2'
         and v3' = p1'
         and v4' = v3' + v'
         and (v5', p1') = (p1', v4')
         and p0' = p0' { m1 = p1' }
         and s = s { m4 = p0' }
         in (v5', s)
      in (3, v5', s)
   in r'
cogent_fas9 : #Struct_Cogent_as1 -> U32
cogent_fas9 s =
   let (c', r', s) = let (v4'
                         , s) = let v' = 1
         and v1' = s
         and s { m1 = p0' } = v1'
         and v2' = p0'
         and v3' = v2' + v'
         and (v4', p0') = (v3', v3')
         and s = s { m1 = p0' }
         in (v4', s)
      in (3, v4', s)
   in r'
cogent_fas10 : #Struct_Cogent_as2 -> U32
cogent_fas10 s =
   let (c', r', s) = let (v5'
                         , s) = let v' = 1
         and v1' = s
         and s { m4 = p0' } = v1'
         and v2' = p0'
         and p0' { m1 = p1' } = v2'
         and v3' = p1'
         and v4' = v3' + v'
         and (v5', p1') = (v4', v4')
         and p0' = p0' { m1 = p1' }
         and s = s { m4 = p0' }
         in (v5', s)
      in (3, v5', s)
   in r'

type Cogent_aa1 = CArr5 U32
type Cogent_aa2 =
   CArr5 #Struct_Cogent_as1
cogent_faa1 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa1 (a, v) =
   let (c', r', a, v) = let (v6'
                            , a
                            , v) = let v1' = 3
         and v' = a
         and (a @{ @v1' = p0' }
             , i0') = (v', v1')
         and v2' = p0'
         and a = a @{ @i0' = p0' }
         and v3' = v
         and v4' = v2'
         and (v5', v) = (v4', v4')
         and v6' = v
         in (v6', a, v)
      in (3, v6', a, v)
   in (r', a)
cogent_faa2 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa2 (a, v) =
   let (c', r', a, v) = let (v10'
                            , a
                            , v) = let v1' = 3
         and v' = a
         and (a @{ @v1' = p0' }
             , i0') = (v', v1')
         and v2' = p0'
         and a = a @{ @i0' = p0' }
         and v4' = 1
         and v3' = a
         and (a @{ @v4' = p1' }
             , i1') = (v3', v4')
         and v5' = p1'
         and a = a @{ @i1' = p1' }
         and v6' = v2' + v5'
         and v7' = v
         and v8' = v6'
         and (v9', v) = (v8', v8')
         and v10' = v
         in (v10', a, v)
      in (3, v10', a, v)
   in (r', a)
cogent_faa3 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa3 (a, v) =
   let (c', r', a, v) = let (v8'
                            , a
                            , v) = let v2' = 2
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v3' = p0'
         and a = a @{ @i0' = p0' }
         and v' = a
         and (a @{ @v3' = p1' }
             , i1') = (v', v3')
         and v4' = p1'
         and a = a @{ @i1' = p1' }
         and v5' = v
         and v6' = v4'
         and (v7', v) = (v6', v6')
         and v8' = v
         in (v8', a, v)
      in (3, v8', a, v)
   in (r', a)
cogent_faa4 : ( Cogent_aa2, U32 ) -> ( U32, Cogent_aa2 )
cogent_faa4 (a, v) =
   let (c', r', a, v) = let (v7'
                            , a
                            , v) = let v1' = 3
         and v' = a
         and (a @{ @v1' = p0' }
             , i0') = (v', v1')
         and v2' = p0'
         and p0' { m1 = p1' } = v2'
         and v3' = p1'
         and p0' = p0' { m1 = p1' }
         and a = a @{ @i0' = p0' }
         and v4' = v
         and v5' = v3'
         and (v6', v) = (v5', v5')
         and v7' = v
         in (v7', a, v)
      in (3, v7', a, v)
   in (r', a)
cogent_faa5 : ( Cogent_aa2, U32 ) -> ( U32, Cogent_aa2 )
cogent_faa5 (a, v) =
   let (c', r', a, v) = let (v10'
                            , a
                            , v) = let v2' = 2
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v3' = p0'
         and p0' { m2 = p1' } = v3'
         and v4' = p1'
         and p0' = p0' { m2 = p1' }
         and a = a @{ @i0' = p0' }
         and v' = a
         and (a @{ @v4' = p2' }
             , i2') = (v', v4')
         and v5' = p2'
         and p2' { m1 = p3' } = v5'
         and v6' = p3'
         and p2' = p2' { m1 = p3' }
         and a = a @{ @i2' = p2' }
         and v7' = v
         and v8' = v6'
         and (v9', v) = (v8', v8')
         and v10' = v
         in (v10', a, v)
      in (3, v10', a, v)
   in (r', a)
cogent_faa6 : Cogent_aa1 -> ( U32, Cogent_aa1 )
cogent_faa6 a =
   let (c', r', a) = let (v8'
                         , a) = let v' = 42
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v3' = p0'
         and v4' = v'
         and (v5', p0') = (v4', v4')
         and a = a @{ @i0' = p0' }
         and v7' = 3
         and v6' = a
         and (a @{ @v7' = p1' }
             , i1') = (v6', v7')
         and v8' = p1'
         and a = a @{ @i1' = p1' }
         in (v8', a)
      in (3, v8', a)
   in (r', a)
cogent_faa7 : Cogent_aa2 -> ( U32, Cogent_aa2 )
cogent_faa7 a =
   let (c', r', a) = let (v10'
                         , a) = let v' = 42
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v3' = p0'
         and p0' { m1 = p1' } = v3'
         and v4' = p1'
         and v5' = v'
         and (v6', p1') = (v5', v5')
         and p0' = p0' { m1 = p1' }
         and a = a @{ @i0' = p0' }
         and v8' = 3
         and v7' = a
         and (a @{ @v8' = p2' }
             , i2') = (v7', v8')
         and v9' = p2'
         and p2' { m1 = p3' } = v9'
         and v10' = p3'
         and p2' = p2' { m1 = p3' }
         and a = a @{ @i2' = p2' }
         in (v10', a)
      in (3, v10', a)
   in (r', a)
cogent_faa8 : Cogent_aa1 -> ( U32, Cogent_aa1 )
cogent_faa8 a =
   let (c', r', a) = let (v5'
                         , a) = let v' = 1
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v3' = p0'
         and v4' = v3' + v'
         and (v5', p0') = (p0', v4')
         and a = a @{ @i0' = p0' }
         in (v5', a)
      in (3, v5', a)
   in (r', a)
cogent_faa9 : Cogent_aa2 -> ( U32, Cogent_aa2 )
cogent_faa9 a =
   let (c', r', a) = let (v6'
                         , a) = let v' = 1
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v3' = p0'
         and p0' { m1 = p1' } = v3'
         and v4' = p1'
         and v5' = v4' + v'
         and (v6', p1') = (p1', v5')
         and p0' = p0' { m1 = p1' }
         and a = a @{ @i0' = p0' }
         in (v6', a)
      in (3, v6', a)
   in (r', a)
cogent_faa10 : Cogent_aa1 -> ( U32, Cogent_aa1 )
cogent_faa10 a =
   let (c', r', a) = let (v7'
                         , a) = let v' = 1
         and v3' = 2
         and v2' = a
         and (a @{ @v3' = p0' }
             , i0') = (v2', v3')
         and v4' = p0'
         and a = a @{ @i0' = p0' }
         and v1' = a
         and (a @{ @v4' = p1' }
             , i1') = (v1', v4')
         and v5' = p1'
         and v6' = v5' + v'
         and (v7', p1') = (p1', v6')
         and a = a @{ @i1' = p1' }
         in (v7', a)
      in (3, v7', a)
   in (r', a)
cogent_faa11 : Cogent_aa1 -> ( U32, Cogent_aa1 )
cogent_faa11 a =
   let (c', r', a) = let (v5'
                         , a) = let v' = 1
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v3' = p0'
         and v4' = v3' + v'
         and (v5', p0') = (v4', v4')
         and a = a @{ @i0' = p0' }
         in (v5', a)
      in (3, v5', a)
   in (r', a)
cogent_faa12 : Cogent_aa2 -> ( U32, Cogent_aa2 )
cogent_faa12 a =
   let (c', r', a) = let (v6'
                         , a) = let v' = 1
         and v2' = 3
         and v1' = a
         and (a @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v3' = p0'
         and p0' { m1 = p1' } = v3'
         and v4' = p1'
         and v5' = v4' + v'
         and (v6', p1') = (v5', v5')
         and p0' = p0' { m1 = p1' }
         and a = a @{ @i0' = p0' }
         in (v6', a)
      in (3, v6', a)
   in (r', a)
cogent_faa13 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa13 (a, v) =
   let (c', r', v, a) = let (v5'
                            , v
                            , a) = let v1' = 1
         and v2' = v
         and v3' = v2' + v1'
         and (v4', v) = (v, v3')
         and v' = a
         and (a @{ @v4' = p0' }
             , i0') = (v', v4')
         and v5' = p0'
         and a = a @{ @i0' = p0' }
         in (v5', v, a)
      in (3, v5', v, a)
   in (r', a)
cogent_faa14 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa14 (a, v) =
   let (c', r', v, a) = let (v5'
                            , v
                            , a) = let v1' = 1
         and v2' = v
         and v3' = v2' + v1'
         and (v4', v) = (v3', v3')
         and v' = a
         and (a @{ @v4' = p0' }
             , i0') = (v', v4')
         and v5' = p0'
         and a = a @{ @i0' = p0' }
         in (v5', v, a)
      in (3, v5', v, a)
   in (r', a)

type Struct_Cogent_as3 = { m5 : U32, m6 : MayNull Struct_Cogent_as1 }
type Cogent_aa3 =
   CArr5 (MayNull (CPtr U32))
cogent_fap1 : ( MayNull (CPtr U32), U32 ) -> ( U32, MayNull (CPtr U32) )
cogent_fap1 (p, v) =
   let (c', r', p, v) = let (v5'
                            , p
                            , v) = let v' = p
         and p { cont = p0' } = v'
         and v1' = p0'
         and p = p { cont = p0' }
         and v2' = v
         and v3' = v1'
         and (v4', v) = (v3', v3')
         and v5' = v
         in (v5', p, v)
      in (3, v5', p, v)
   in (r', p)
cogent_fap2 : ( MayNull Struct_Cogent_as1, U32 ) -> ( U32, MayNull Struct_Cogent_as1 )
cogent_fap2 (p, v) =
   let (c', r', p, v) = let (v6'
                            , p
                            , v) = let v' = p
         and p { cont = p0' } = v'
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v2' = p1'
         and p0' = p0' { m1 = p1' }
         and p = p { cont = p0' }
         and v3' = v
         and v4' = v2'
         and (v5', v) = (v4', v4')
         and v6' = v
         in (v6', p, v)
      in (3, v6', p, v)
   in (r', p)
cogent_fap3 : ( MayNull Struct_Cogent_as1, U32 ) -> ( U32, MayNull Struct_Cogent_as1 )
cogent_fap3 (p, v) =
   let (c', r', p, v) = let (v5'
                            , p
                            , v) = let v' = p
         and p { m1 = p0' } = v'
         and v1' = p0'
         and p = p { m1 = p0' }
         and v2' = v
         and v3' = v1'
         and (v4', v) = (v3', v3')
         and v5' = v
         in (v5', p, v)
      in (3, v5', p, v)
   in (r', p)
cogent_fap4 : ( MayNull Struct_Cogent_as3, U32 ) -> ( U32, MayNull Struct_Cogent_as3 )
cogent_fap4 (p, v) =
   let (c', r', p, v) = let (v7'
                            , p
                            , v) = let v' = p
         and p { m6 = p0' } = v'
         and v1' = p0'
         and p0' { cont = p1' } = v1'
         and v2' = p1'
         and p1' { m1 = p2' } = v2'
         and v3' = p2'
         and p1' = p1' { m1 = p2' }
         and p0' = p0' { cont = p1' }
         and p = p { m6 = p0' }
         and v4' = v
         and v5' = v3'
         and (v6', v) = (v5', v5')
         and v7' = v
         in (v7', p, v)
      in (3, v7', p, v)
   in (r', p)
cogent_fap5 : ( MayNull Struct_Cogent_as3, U32 ) -> ( U32, MayNull Struct_Cogent_as3 )
cogent_fap5 (p, v) =
   let (c', r', p, v) = let (v6'
                            , p
                            , v) = let v' = p
         and p { m6 = p0' } = v'
         and v1' = p0'
         and p0' { m1 = p1' } = v1'
         and v2' = p1'
         and p0' = p0' { m1 = p1' }
         and p = p { m6 = p0' }
         and v3' = v
         and v4' = v2'
         and (v5', v) = (v4', v4')
         and v6' = v
         in (v6', p, v)
      in (3, v6', p, v)
   in (r', p)
cogent_fap6 : ( Cogent_aa3, U32 ) -> ( U32, Cogent_aa3 )
cogent_fap6 (p, v) =
   let (c', r', p, v) = let (v7'
                            , p
                            , v) = let v1' = 3
         and v' = p
         and (p @{ @v1' = p0' }
             , i0') = (v', v1')
         and v2' = p0'
         and p0' { cont = p1' } = v2'
         and v3' = p1'
         and p0' = p0' { cont = p1' }
         and p = p @{ @i0' = p0' }
         and v4' = v
         and v5' = v3'
         and (v6', v) = (v5', v5')
         and v7' = v
         in (v7', p, v)
      in (3, v7', p, v)
   in (r', p)
cogent_fap7 : MayNull (CPtr U32) -> ( U32, MayNull (CPtr U32) )
cogent_fap7 p =
   let (c', r', p) = let (v6'
                         , p) = let v' = 42
         and v1' = p
         and p { cont = p0' } = v1'
         and v2' = p0'
         and v3' = v'
         and (v4', p0') = (v3', v3')
         and p = p { cont = p0' }
         and v5' = p
         and p { cont = p1' } = v5'
         and v6' = p1'
         and p = p { cont = p1' }
         in (v6', p)
      in (3, v6', p)
   in (r', p)
cogent_fap8 : MayNull Struct_Cogent_as1 -> ( U32, MayNull Struct_Cogent_as1 )
cogent_fap8 p =
   let (c', r', p) = let (v8'
                         , p) = let v' = 42
         and v1' = p
         and p { cont = p0' } = v1'
         and v2' = p0'
         and p0' { m1 = p1' } = v2'
         and v3' = p1'
         and v4' = v'
         and (v5', p1') = (v4', v4')
         and p0' = p0' { m1 = p1' }
         and p = p { cont = p0' }
         and v6' = p
         and p { cont = p2' } = v6'
         and v7' = p2'
         and p2' { m1 = p3' } = v7'
         and v8' = p3'
         and p2' = p2' { m1 = p3' }
         and p = p { cont = p2' }
         in (v8', p)
      in (3, v8', p)
   in (r', p)
cogent_fap9 : MayNull Struct_Cogent_as1 -> ( U32, MayNull Struct_Cogent_as1 )
cogent_fap9 p =
   let (c', r', p) = let (v6'
                         , p) = let v' = 42
         and v1' = p
         and p { m1 = p0' } = v1'
         and v2' = p0'
         and v3' = v'
         and (v4', p0') = (v3', v3')
         and p = p { m1 = p0' }
         and v5' = p
         and p { m1 = p1' } = v5'
         and v6' = p1'
         and p = p { m1 = p1' }
         in (v6', p)
      in (3, v6', p)
   in (r', p)
cogent_fap10 : MayNull Struct_Cogent_as3 -> ( U32, MayNull Struct_Cogent_as3 )
cogent_fap10 p =
   let (c', r', p) = let (v10'
                         , p) = let v' = 42
         and v1' = p
         and p { m6 = p0' } = v1'
         and v2' = p0'
         and p0' { cont = p1' } = v2'
         and v3' = p1'
         and p1' { m1 = p2' } = v3'
         and v4' = p2'
         and v5' = v'
         and (v6', p2') = (v5', v5')
         and p1' = p1' { m1 = p2' }
         and p0' = p0' { cont = p1' }
         and p = p { m6 = p0' }
         and v7' = p
         and p { m6 = p3' } = v7'
         and v8' = p3'
         and p3' { cont = p4' } = v8'
         and v9' = p4'
         and p4' { m1 = p5' } = v9'
         and v10' = p5'
         and p4' = p4' { m1 = p5' }
         and p3' = p3' { cont = p4' }
         and p = p { m6 = p3' }
         in (v10', p)
      in (3, v10', p)
   in (r', p)
cogent_fap11 : MayNull Struct_Cogent_as3 -> ( U32, MayNull Struct_Cogent_as3 )
cogent_fap11 p =
   let (c', r', p) = let (v8'
                         , p) = let v' = 42
         and v1' = p
         and p { m6 = p0' } = v1'
         and v2' = p0'
         and p0' { m1 = p1' } = v2'
         and v3' = p1'
         and v4' = v'
         and (v5', p1') = (v4', v4')
         and p0' = p0' { m1 = p1' }
         and p = p { m6 = p0' }
         and v6' = p
         and p { m6 = p2' } = v6'
         and v7' = p2'
         and p2' { m1 = p3' } = v7'
         and v8' = p3'
         and p2' = p2' { m1 = p3' }
         and p = p { m6 = p2' }
         in (v8', p)
      in (3, v8', p)
   in (r', p)
cogent_fap12 : Cogent_aa3 -> ( U32, Cogent_aa3 )
cogent_fap12 p =
   let (c', r', p) = let (v10'
                         , p) = let v' = 42
         and v2' = 3
         and v1' = p
         and (p @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v3' = p0'
         and p0' { cont = p1' } = v3'
         and v4' = p1'
         and v5' = v'
         and (v6', p1') = (v5', v5')
         and p0' = p0' { cont = p1' }
         and p = p @{ @i0' = p0' }
         and v8' = 3
         and v7' = p
         and (p @{ @v8' = p2' }
             , i2') = (v7', v8')
         and v9' = p2'
         and p2' { cont = p3' } = v9'
         and v10' = p3'
         and p2' = p2' { cont = p3' }
         and p = p @{ @i2' = p2' }
         in (v10', p)
      in (3, v10', p)
   in (r', p)
cogent_fap13 : MayNull (CPtr U32) -> ( U32, MayNull (CPtr U32) )
cogent_fap13 p =
   let (c', r', p) = let (v4'
                         , p) = let v' = 1
         and v1' = p
         and p { cont = p0' } = v1'
         and v2' = p0'
         and v3' = v2' + v'
         and (v4', p0') = (p0', v3')
         and p = p { cont = p0' }
         in (v4', p)
      in (3, v4', p)
   in (r', p)
cogent_fap14 : MayNull Struct_Cogent_as1 -> ( U32, MayNull Struct_Cogent_as1 )
cogent_fap14 p =
   let (c', r', p) = let (v4'
                         , p) = let v' = 1
         and v1' = p
         and p { m1 = p0' } = v1'
         and v2' = p0'
         and v3' = v2' + v'
         and (v4', p0') = (p0', v3')
         and p = p { m1 = p0' }
         in (v4', p)
      in (3, v4', p)
   in (r', p)
cogent_fap15 : Cogent_aa3 -> ( U32, Cogent_aa3 )
cogent_fap15 p =
   let (c', r', p) = let (v6'
                         , p) = let v' = 1
         and v2' = 3
         and v1' = p
         and (p @{ @v2' = p0' }
             , i0') = (v1', v2')
         and v3' = p0'
         and p0' { cont = p1' } = v3'
         and v4' = p1'
         and v5' = v4' + v'
         and (v6', p1') = (p1', v5')
         and p0' = p0' { cont = p1' }
         and p = p @{ @i0' = p0' }
         in (v6', p)
      in (3, v6', p)
   in (r', p)

cogent_fam1 : ( U32, U32 ) -> U32
cogent_fam1 (v1, v2) =
   let (c', r', v1, v2) = let (v8'
                              , v1
                              , v2) = let v' = 17
         and v1' = v1
         and v2' = v'
         and (v3', v1) = (v2', v2')
         and v4' = 4
         and v5' = v2
         and v6' = v4'
         and (v7', v2) = (v6', v6')
         and v8' = v3' + v7'
         in (v8', v1, v2)
      in (3, v8', v1, v2)
   in r'
cogent_fam2 : ( U32, U32 ) -> U32
cogent_fam2 (v1, v2) =
   let (c', r', v1, v2) = let (v9'
                              , v1
                              , v2) = let v' = 17
         and v1' = v1
         and v2' = v'
         and (v3', v1) = (v2', v2')
         and v4' = 4
         and v5' = v2
         and v6' = v4'
         and (v7', v2) = (v6', v6')
         and v8' = v3' + v7'
         and v9' = v1
         in (v9', v1, v2)
      in (3, v9', v1, v2)
   in r'
cogent_fam3 : ( U32, U32 ) -> U32
cogent_fam3 (v1, v2) =
   let (c', r', v1, v2) = let (v11'
                              , v1
                              , v2) = let v' = 17
         and v1' = v1
         and v2' = v'
         and (v3', v1) = (v2', v2')
         and v4' = 4
         and v5' = v2
         and v6' = v4'
         and (v7', v2) = (v6', v6')
         and v8' = v3' + v7'
         and v9' = v1
         and v10' = v2
         and v11' = v9' + v10'
         in (v11', v1, v2)
      in (3, v11', v1, v2)
   in r'
cogent_fam4 : ( U32, U32 ) -> U32
cogent_fam4 (v1, v2) =
   let (c', r', v1, v2) = let (v14'
                              , v1
                              , v2) = let v' = 17
         and v1' = v1
         and v2' = v'
         and (v3', v1) = (v2', v2')
         and v4' = 4
         and v5' = v2
         and v6' = v4'
         and (v7', v2) = (v6', v6')
         and v8' = v3' + v7'
         and v9' = v1
         and v10' = v8'
         and (v11', v1) = (v10', v10')
         and v12' = v1
         and v13' = v2
         and v14' = v12' + v13'
         in (v14', v1, v2)
      in (3, v14', v1, v2)
   in r'
cogent_fam5 : ( U32, U32 ) -> U32
cogent_fam5 (v1, v2) =
   let (c', r', v1) = let (v8'
                          , v1) = let v' = 17
         and v1' = v1
         and v2' = v'
         and (v3', v1) = (v2', v2')
         and v4' = 4
         and v5' = v1
         and v6' = v4'
         and (v7', v1) = (v6', v6')
         and v8' = v3' + v7'
         in (v8', v1)
      in (3, v8', v1)
   in r'
cogent_fam6 : ( U32, U32, U32 ) -> U32
cogent_fam6 (v1, v2, v3) =
   let (c', r', v1, v2) = let (v11'
                              , v1
                              , v2) = let v' = cogent_fam1
         and v1' = 17
         and v2' = v1
         and v3' = v1'
         and (v4', v1) = (v3', v3')
         and v5' = 4
         and v6' = v2
         and v7' = v5'
         and (v8', v2) = (v7', v7')
         and v9' = v' (v4', v8')
         and v10' = v3
         and v11' = v9' + v10'
         in (v11', v1, v2)
      in (3, v11', v1, v2)
   in r'
cogent_fam7 : ( U32, U32, U32 ) -> U32
cogent_fam7 (v1, v2, v3) =
   let (c'
       , r'
       , v1
       , v2
       , v3) = let (v17'
                   , v1
                   , v2
                   , v3) = let v' = cogent_fam1
         and v1' = 17
         and v2' = v1
         and v3' = v1'
         and (v4', v1) = (v3', v3')
         and v5' = 4
         and v6' = v2
         and v7' = v5'
         and (v8', v2) = (v7', v7')
         and v9' = v' (v4', v8')
         and v10' = v3
         and v11' = v9'
         and (v12', v3) = (v11', v11')
         and v13' = v1
         and v14' = v2
         and v15' = v13' + v14'
         and v16' = v3
         and v17' = v15' + v16'
         in (v17', v1, v2, v3)
      in (3, v17', v1, v2, v3)
   in r'
cogent_fam8 : ( U32, U32, U32 ) -> U32
cogent_fam8 (v1, v2, v3) =
   let (c'
       , r'
       , v1
       , v2
       , v3) = let (v19'
                   , v1
                   , v2
                   , v3) = let v' = cogent_fam6
         and v1' = 17
         and v2' = v1
         and v3' = v1'
         and (v4', v1) = (v3', v3')
         and v5' = 4
         and v6' = v2
         and v7' = v5'
         and (v8', v2) = (v7', v7')
         and v9' = 0
         and v10' = v3
         and v11' = v9'
         and (v12', v3) = (v11', v11')
         and v13' = v' (v4', v8', v12')
         and v14' = v1
         and v15' = v13' + v14'
         and v16' = v2
         and v17' = v15' + v16'
         and v18' = v3
         and v19' = v17' + v18'
         in (v19', v1, v2, v3)
      in (3, v19', v1, v2, v3)
   in r'
cogent_fam9 : ( U32, U32, U32 ) -> U32
cogent_fam9 (v1, v2, v3) =
   let (c'
       , r'
       , v1
       , v2
       , v3) = let (v14'
                   , v1
                   , v2
                   , v3) = let v' = 17
         and v1' = v1
         and v2' = v'
         and (v3', v1) = (v2', v2')
         and (v12', v2, v3) = if v3'
            then let v4' = 4
               and v5' = v2
               and v6' = v4'
               and (v7', v2) = (v6', v6')
               in (v7', v2, v3)
            else let v8' = 0
               and v9' = v3
               and v10' = v8'
               and (v11', v3) = (v10', v10')
               in (v11', v2, v3)
         and v13' = v3
         and v14' = v12' + v13'
         in (v14', v1, v2, v3)
      in (3, v14', v1, v2, v3)
   in r'
cogent_fam10 : ( U32, U32, U32 ) -> U32
cogent_fam10 (v1, v2, v3) =
   let (c'
       , r'
       , v1
       , v2
       , v3) = let (v20'
                   , v1
                   , v2
                   , v3) = let v' = 17
         and v1' = v1
         and v2' = v'
         and (v3', v1) = (v2', v2')
         and (v12', v2, v3) = if v3'
            then let v4' = 4
               and v5' = v2
               and v6' = v4'
               and (v7', v2) = (v6', v6')
               in (v7', v2, v3)
            else let v8' = 0
               and v9' = v3
               and v10' = v8'
               and (v11', v3) = (v10', v10')
               in (v11', v2, v3)
         and v13' = v3
         and v14' = v12'
         and (v15', v3) = (v14', v14')
         and v16' = v1
         and v17' = v2
         and v18' = v16' + v17'
         and v19' = v3
         and v20' = v18' + v19'
         in (v20', v1, v2, v3)
      in (3, v20', v1, v2, v3)
   in r'
cogent_fam11 : ( U32, U32, U32 ) -> U32
cogent_fam11 (v1, v2, v3) =
   let (c'
       , r'
       , v1
       , v2
       , v3) = let (v18'
                   , v1
                   , v2
                   , v3) = let v' = 17
         and v1' = v1
         and v2' = v'
         and (v3', v1) = (v2', v2')
         and (v12', v2, v3) = if v3'
            then let v4' = 4
               and v5' = v2
               and v6' = v4'
               and (v7', v2) = (v6', v6')
               in (v7', v2, v3)
            else let v8' = 0
               and v9' = v3
               and v10' = v8'
               and (v11', v3) = (v10', v10')
               in (v11', v2, v3)
         and v13' = v1
         and v14' = v12' + v13'
         and v15' = v2
         and v16' = v14' + v15'
         and v17' = v3
         and v18' = v16' + v17'
         in (v18', v1, v2, v3)
      in (3, v18', v1, v2, v3)
   in r'
