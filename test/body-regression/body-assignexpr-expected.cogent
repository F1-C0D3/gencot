cogent_fac1 : U32 -> U32
cogent_fac1 v =
   let ((_, _, res')
       , v) = let v1' = 42
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fac2 : U8 -> U8
cogent_fac2 v =
   let ((_, _, res')
       , v) = let v1' = 'x'
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fac4 : MayNull (CPtr U8) -> ( MayNull (CPtr U8), MayNull (CPtr U8) )
cogent_fac4 v =
   let ((_, _, res')
       , v) = let v1' = "abc"
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fac5 : err-float -> err-float
cogent_fac5 v =
   let ((_, _, res')
       , v) = let v1' = gencotDummy "Float literals not supported"
         {- 1.5; -}
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fav1 : ( U32, U32 ) -> U32
cogent_fav1 (v
            , w) =
   let ((_, _, res')
       , v) = let v1' = w
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fav2 : ( U32, U32 ) -> U32
cogent_fav2 (xyz_123
            , w) =
   let ((_, _, res')
       , xyz_123) = let v1' = w
      and v' = xyz_123
      and v' = v1'
      and (v', xyz_123) = (v', v')
      and v2' = xyz_123
      and c' = (True, True, Some v2')
      in (c', xyz_123)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao1 : U32 -> U32
cogent_fao1 v =
   let ((_, _, res')
       , v) = let v1' = 42
      and v' = v
      and v' = v' + v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao2 : U32 -> U32
cogent_fao2 v =
   let ((_, _, res')
       , v) = let v1' = 42
      and v' = v
      and v' = v' - v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao3 : U32 -> U32
cogent_fao3 v =
   let ((_, _, res')
       , v) = let v1' = 42
      and v' = v
      and v' = v' * v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao4 : U32 -> U32
cogent_fao4 v =
   let ((_, _, res')
       , v) = let v1' = 42
      and v' = v
      and v' = v' / v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao5 : U32 -> U32
cogent_fao5 v =
   let ((_, _, res')
       , v) = let v1' = 42
      and v' = v
      and v' = v' % v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao6 : U32 -> U32
cogent_fao6 v =
   let ((_, _, res')
       , v) = let v1' = 4
      and v' = v
      and v' = v' << v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao7 : U32 -> U32
cogent_fao7 v =
   let ((_, _, res')
       , v) = let v1' = 4
      and v' = v
      and v' = v' >> v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao8 : U32 -> U32
cogent_fao8 v =
   let ((_, _, res')
       , v) = let v1' = 4
      and v' = v
      and v' = v' .&. v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao9 : U32 -> U32
cogent_fao9 v =
   let ((_, _, res')
       , v) = let v1' = 4
      and v' = v
      and v' = v' .|. v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao10 : U32 -> U32
cogent_fao10 v =
   let ((_, _, res')
       , v) = let v1' = 4
      and v' = v
      and v' = v' .^. v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao11 : U32 -> U32
cogent_fao11 v =
   let ((_, _, res')
       , v) = let v1' = 1
      and v' = v
      and v' = v' + v1'
      and (v', v) = (v, v')
      and c' = (True, True, Some v')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao12 : U32 -> U32
cogent_fao12 v =
   let ((_, _, res')
       , v) = let v1' = 1
      and v' = v
      and v' = v' - v1'
      and (v', v) = (v, v')
      and c' = (True, True, Some v')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao13 : U32 -> U32
cogent_fao13 v =
   let ((_, _, res')
       , v) = let v1' = 1
      and v' = v
      and v' = v' + v1'
      and (v', v) = (v', v')
      and c' = (True, True, Some v')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fao14 : U32 -> U32
cogent_fao14 v =
   let ((_, _, res')
       , v) = let v1' = 1
      and v' = v
      and v' = v' - v1'
      and (v', v) = (v', v')
      and c' = (True, True, Some v')
      in (c', v)
   in res'
      | None -> defaultVal ()
      | Some v -> v

type Struct_Cogent_as1 = { m1 : U32, m2 : U32 }
type Struct_Cogent_as2 = { m3 : U32, m4 : #Struct_Cogent_as1 }
cogent_fas1 : ( #Struct_Cogent_as1, U32 ) -> U32
cogent_fas1 (s
            , v) =
   let ((_, _, res')
       , v
       , s) = let v1' = s
      and s { m1 = r0' } = v1'
      and v1' = r0'
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      and s = s { m1 = r0' }
      in (c', v, s)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fas2 : ( #Struct_Cogent_as1, U32 ) -> U32
cogent_fas2 (s
            , v) =
   let ((_, _, res')
       , v
       , s) = let v1' = s
      and s { m1 = r0' } = v1'
      and v1' = r0'
      and v2' = s
      and s { m2 = r1' } = v2'
      and v2' = r1'
      and v1' = v1' + v2'
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v3' = v
      and c' = (True, True, Some v3')
      and s = s { m2 = r1' }
      and s = s { m1 = r0' }
      in (c', v, s)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fas3 : ( #Struct_Cogent_as2, U32 ) -> U32
cogent_fas3 (s
            , v) =
   let ((_, _, res')
       , v
       , s) = let v1' = s
      and s { m4 = r0' } = v1'
      and v1' = r0'
      and r0' { m1 = r1' } = v1'
      and v1' = r1'
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v2' = v
      and c' = (True, True, Some v2')
      and r0' = r0' { m1 = r1' }
      and s = s { m4 = r0' }
      in (c', v, s)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fas4 : ( #Struct_Cogent_as2, U32 ) -> U32
cogent_fas4 (s
            , v) =
   let ((_, _, res')
       , v
       , s) = let v1' = s
      and s { m4 = r0' } = v1'
      and v1' = r0'
      and r0' { m1 = r1' } = v1'
      and v1' = r1'
      and v2' = s
      and s { m4 = r2' } = v2'
      and v2' = r2'
      and r2' { m2 = r3' } = v2'
      and v2' = r3'
      and v1' = v1' + v2'
      and v3' = s
      and s { m3 = r4' } = v3'
      and v3' = r4'
      and v1' = v1' + v3'
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v4' = v
      and c' = (True, True, Some v4')
      and s = s { m3 = r4' }
      and r2' = r2' { m2 = r3' }
      and s = s { m4 = r2' }
      and r0' = r0' { m1 = r1' }
      and s = s { m4 = r0' }
      in (c', v, s)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fas5 : #Struct_Cogent_as1 -> U32
cogent_fas5 s =
   let ((_, _, res')
       , s) = let v1' = 42
      and v' = s
      and s { m1 = r0' } = v'
      and v' = r0'
      and v' = v1'
      and (v', r0') = (v', v')
      and v2' = s
      and s { m1 = r1' } = v2'
      and v2' = r1'
      and c' = (True, True, Some v2')
      and s = s { m1 = r1' }
      and s = s { m1 = r0' }
      in (c', s)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fas6 : #Struct_Cogent_as2 -> U32
cogent_fas6 s =
   let ((_, _, res')
       , s) = let v1' = 42
      and v' = s
      and s { m4 = r0' } = v'
      and v' = r0'
      and r0' { m1 = r1' } = v'
      and v' = r1'
      and v' = v1'
      and (v', r1') = (v', v')
      and v2' = s
      and s { m4 = r2' } = v2'
      and v2' = r2'
      and r2' { m1 = r3' } = v2'
      and v2' = r3'
      and c' = (True, True, Some v2')
      and r2' = r2' { m1 = r3' }
      and s = s { m4 = r2' }
      and r0' = r0' { m1 = r1' }
      and s = s { m4 = r0' }
      in (c', s)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fas7 : #Struct_Cogent_as1 -> U32
cogent_fas7 s =
   let ((_, _, res')
       , s) = let v1' = 1
      and v' = s
      and s { m1 = r0' } = v'
      and v' = r0'
      and v' = v' + v1'
      and (v', r0') = (r0', v')
      and c' = (True, True, Some v')
      and s = s { m1 = r0' }
      in (c', s)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fas8 : #Struct_Cogent_as2 -> U32
cogent_fas8 s =
   let ((_, _, res')
       , s) = let v1' = 1
      and v' = s
      and s { m4 = r0' } = v'
      and v' = r0'
      and r0' { m1 = r1' } = v'
      and v' = r1'
      and v' = v' + v1'
      and (v', r1') = (r1', v')
      and c' = (True, True, Some v')
      and r0' = r0' { m1 = r1' }
      and s = s { m4 = r0' }
      in (c', s)
   in res'
      | None -> defaultVal ()
      | Some v -> v

type Cogent_aa1 = CArr5 U32
type Cogent_aa2 =
   CArr5 #Struct_Cogent_as1
cogent_faa1 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa1 (a
            , v) =
   let ((_, _, res')
       , v
       , a) = let v2' = 3
      and v1' = a
      and (a @{ @v2' = r0' }
          , i0') = (v1', v2')
      and v1' = r0'
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v3' = v
      and c' = (True, True, Some v3')
      and a = a @{ @i0' = r0' }
      in (c', v, a)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_faa2 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa2 (a
            , v) =
   let ((_, _, res')
       , v
       , a) = let v2' = 3
      and v1' = a
      and (a @{ @v2' = r0' }
          , i0') = (v1', v2')
      and v1' = r0'
      and v4' = 1
      and v3' = a
      and (a @{ @v4' = r1' }
          , i1') = (v3', v4')
      and v3' = r1'
      and v1' = v1' + v3'
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v5' = v
      and c' = (True, True, Some v5')
      and a = a @{ @i1' = r1' }
      and a = a @{ @i0' = r0' }
      in (c', v, a)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_faa3 : ( Cogent_aa1, U32 ) -> ( U32, Cogent_aa1 )
cogent_faa3 (a
            , v) =
   let ((_, _, res')
       , v
       , a) = let v3' = 2
      and v2' = a
      and (a @{ @v3' = r0' }
          , i0') = (v2', v3')
      and v2' = r0'
      and v1' = a
      and (a @{ @v2' = r1' }
          , i1') = (v1', v2')
      and v1' = r1'
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v4' = v
      and c' = (True, True, Some v4')
      and a = a @{ @i1' = r1' }
      and a = a @{ @i0' = r0' }
      in (c', v, a)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_faa4 : ( Cogent_aa2, U32 ) -> ( U32, Cogent_aa2 )
cogent_faa4 (a
            , v) =
   let ((_, _, res')
       , v
       , a) = let v2' = 3
      and v1' = a
      and (a @{ @v2' = r0' }
          , i0') = (v1', v2')
      and v1' = r0'
      and r0' { m1 = r1' } = v1'
      and v1' = r1'
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v3' = v
      and c' = (True, True, Some v3')
      and r0' = r0' { m1 = r1' }
      and a = a @{ @i0' = r0' }
      in (c', v, a)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_faa5 : ( Cogent_aa2, U32 ) -> ( U32, Cogent_aa2 )
cogent_faa5 (a
            , v) =
   let ((_, _, res')
       , v
       , a) = let v3' = 2
      and v2' = a
      and (a @{ @v3' = r0' }
          , i0') = (v2', v3')
      and v2' = r0'
      and r0' { m2 = r1' } = v2'
      and v2' = r1'
      and v1' = a
      and (a @{ @v2' = r2' }
          , i2') = (v1', v2')
      and v1' = r2'
      and r2' { m1 = r3' } = v1'
      and v1' = r3'
      and v' = v
      and v' = v1'
      and (v', v) = (v', v')
      and v4' = v
      and c' = (True, True, Some v4')
      and r2' = r2' { m1 = r3' }
      and a = a @{ @i2' = r2' }
      and r0' = r0' { m2 = r1' }
      and a = a @{ @i0' = r0' }
      in (c', v, a)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_faa6 : Cogent_aa1 -> ( U32, Cogent_aa1 )
cogent_faa6 a =
   let ((_, _, res')
       , a) = let v2' = 42
      and v1' = 3
      and v' = a
      and (a @{ @v1' = r0' }
          , i0') = (v', v1')
      and v' = r0'
      and v' = v2'
      and (v', r0') = (v', v')
      and v4' = 3
      and v3' = a
      and (a @{ @v4' = r1' }
          , i1') = (v3', v4')
      and v3' = r1'
      and c' = (True, True, Some v3')
      and a = a @{ @i1' = r1' }
      and a = a @{ @i0' = r0' }
      in (c', a)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_faa7 : Cogent_aa2 -> ( U32, Cogent_aa2 )
cogent_faa7 a =
   let ((_, _, res')
       , a) = let v2' = 42
      and v1' = 3
      and v' = a
      and (a @{ @v1' = r0' }
          , i0') = (v', v1')
      and v' = r0'
      and r0' { m1 = r1' } = v'
      and v' = r1'
      and v' = v2'
      and (v', r1') = (v', v')
      and v4' = 3
      and v3' = a
      and (a @{ @v4' = r2' }
          , i2') = (v3', v4')
      and v3' = r2'
      and r2' { m1 = r3' } = v3'
      and v3' = r3'
      and c' = (True, True, Some v3')
      and r2' = r2' { m1 = r3' }
      and a = a @{ @i2' = r2' }
      and r0' = r0' { m1 = r1' }
      and a = a @{ @i0' = r0' }
      in (c', a)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_faa8 : Cogent_aa1 -> ( U32, Cogent_aa1 )
cogent_faa8 a =
   let ((_, _, res')
       , a) = let v2' = 1
      and v1' = 3
      and v' = a
      and (a @{ @v1' = r0' }
          , i0') = (v', v1')
      and v' = r0'
      and v' = v' + v2'
      and (v', r0') = (r0', v')
      and c' = (True, True, Some v')
      and a = a @{ @i0' = r0' }
      in (c', a)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_faa9 : Cogent_aa2 -> ( U32, Cogent_aa2 )
cogent_faa9 a =
   let ((_, _, res')
       , a) = let v2' = 1
      and v1' = 3
      and v' = a
      and (a @{ @v1' = r0' }
          , i0') = (v', v1')
      and v' = r0'
      and r0' { m1 = r1' } = v'
      and v' = r1'
      and v' = v' + v2'
      and (v', r1') = (r1', v')
      and c' = (True, True, Some v')
      and r0' = r0' { m1 = r1' }
      and a = a @{ @i0' = r0' }
      in (c', a)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_faa10 : Cogent_aa1 -> ( U32, Cogent_aa1 )
cogent_faa10 a =
   let ((_, _, res')
       , a) = let v3' = 1
      and v2' = 2
      and v1' = a
      and (a @{ @v2' = r0' }
          , i0') = (v1', v2')
      and v1' = r0'
      and v' = a
      and (a @{ @v1' = r1' }
          , i1') = (v', v1')
      and v' = r1'
      and v' = v' + v3'
      and (v', r1') = (r1', v')
      and c' = (True, True, Some v')
      and a = a @{ @i1' = r1' }
      and a = a @{ @i0' = r0' }
      in (c', a)
   in res'
      | None -> defaultVal ()
      | Some v -> v

cogent_fam1 : ( U32, U32 ) -> U32
cogent_fam1 (v1
            , v2) =
   let ((_, _, res')
       , v2
       , v1) = let v1' = 17
      and v' = v1
      and v' = v1'
      and (v', v1) = (v', v')
      and v3' = 4
      and v2' = v2
      and v2' = v3'
      and (v2', v2) = (v2', v2')
      and v' = v' + v2'
      and c' = (True, True, Some v')
      in (c', v2, v1)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fam2 : ( U32, U32 ) -> U32
cogent_fam2 (v1
            , v2) =
   let ((_, _, res')
       , v2
       , v1) = let v1' = 17
      and v' = v1
      and v' = v1'
      and (v', v1) = (v', v')
      and v3' = 4
      and v2' = v2
      and v2' = v3'
      and (v2', v2) = (v2', v2')
      and v' = v' + v2'
      and v4' = v1
      and c' = (True, True, Some v4')
      in (c', v2, v1)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fam3 : ( U32, U32 ) -> U32
cogent_fam3 (v1
            , v2) =
   let ((_, _, res')
       , v2
       , v1) = let v1' = 17
      and v' = v1
      and v' = v1'
      and (v', v1) = (v', v')
      and v3' = 4
      and v2' = v2
      and v2' = v3'
      and (v2', v2) = (v2', v2')
      and v' = v' + v2'
      and v4' = v1
      and v5' = v2
      and v4' = v4' + v5'
      and c' = (True, True, Some v4')
      in (c', v2, v1)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fam4 : ( U32, U32 ) -> U32
cogent_fam4 (v1
            , v2) =
   let ((_, _, res')
       , v1
       , v2) = let v2' = 17
      and v1' = v1
      and v1' = v2'
      and (v1', v1) = (v1', v1')
      and v4' = 4
      and v3' = v2
      and v3' = v4'
      and (v3', v2) = (v3', v3')
      and v1' = v1' + v3'
      and v' = v1
      and v' = v1'
      and (v', v1) = (v', v')
      and v5' = v1
      and v6' = v2
      and v5' = v5' + v6'
      and c' = (True, True, Some v5')
      in (c', v1, v2)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fam5 : ( U32, U32 ) -> U32
cogent_fam5 (v1
            , v2) =
   let ((_, _, res')
       , v1) = let v1' = 17
      and v' = v1
      and v' = v1'
      and (v', v1) = (v', v')
      and v3' = 4
      and v2' = v1
      and v2' = v3'
      and (v2', v1) = (v2', v2')
      and v' = v' + v2'
      and c' = (True, True, Some v')
      in (c', v1)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fam6 : ( U32, U32, U32 ) -> U32
cogent_fam6 (v1
            , v2
            , v3) =
   let ((_, _, res')
       , v2
       , v1) = let v1' = 17
      and v' = v1
      and v' = v1'
      and (v', v1) = (v', v')
      and v3' = 4
      and v2' = v2
      and v2' = v3'
      and (v2', v2) = (v2', v2')
      and v' = cogent_fam1 (v', v2')
      and v4' = v3
      and v' = v' + v4'
      and c' = (True, True, Some v')
      in (c', v2, v1)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fam7 : ( U32, U32, U32 ) -> U32
cogent_fam7 (v1
            , v2
            , v3) =
   let ((_, _, res')
       , v3
       , v2
       , v1) = let v2' = 17
      and v1' = v1
      and v1' = v2'
      and (v1', v1) = (v1', v1')
      and v4' = 4
      and v3' = v2
      and v3' = v4'
      and (v3', v2) = (v3', v3')
      and v1' = cogent_fam1 (v1', v3')
      and v' = v3
      and v' = v1'
      and (v', v3) = (v', v')
      and v5' = v1
      and v6' = v2
      and v5' = v5' + v6'
      and v7' = v3
      and v5' = v5' + v7'
      and c' = (True, True, Some v5')
      in (c', v3, v2, v1)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fam8 : ( U32, U32, U32 ) -> U32
cogent_fam8 (v1
            , v2
            , v3) =
   let ((_, _, res')
       , v3
       , v2
       , v1) = let v1' = 17
      and v' = v1
      and v' = v1'
      and (v', v1) = (v', v')
      and v3' = 4
      and v2' = v2
      and v2' = v3'
      and (v2', v2) = (v2', v2')
      and v5' = 0
      and v4' = v3
      and v4' = v5'
      and (v4', v3) = (v4', v4')
      and v' = cogent_fam6 (v'
                           , v2'
                           , v4')
      and v6' = v1
      and v' = v' + v6'
      and v7' = v2
      and v' = v' + v7'
      and v8' = v3
      and v' = v' + v8'
      and c' = (True, True, Some v')
      in (c', v3, v2, v1)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fam9 : ( U32, U32, U32 ) -> U32
cogent_fam9 (v1
            , v2
            , v3) =
   let ((_, _, res')
       , v2
       , v3
       , v1) = let v1' = 17
      and v' = v1
      and v' = v1'
      and (v', v1) = (v', v')
      and (v', v2, v3) = if v'
         then let v3' = 4
            and v2' = v2
            and v2' = v3'
            and (v2', v2) = (v2', v2')
            in (v2', v2, v3)
         else let v5' = 0
            and v4' = v3
            and v4' = v5'
            and (v4', v3) = (v4', v4')
            in (v4', v2, v3)
      and v6' = v3
      and v' = v' + v6'
      and c' = (True, True, Some v')
      in (c', v2, v3, v1)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fam10 : ( U32, U32, U32 ) -> U32
cogent_fam10 (v1
             , v2
             , v3) =
   let ((_, _, res')
       , v3
       , v2
       , v1) = let v2' = 17
      and v1' = v1
      and v1' = v2'
      and (v1', v1) = (v1', v1')
      and (v1', v2, v3) = if v1'
         then let v4' = 4
            and v3' = v2
            and v3' = v4'
            and (v3', v2) = (v3', v3')
            in (v3', v2, v3)
         else let v6' = 0
            and v5' = v3
            and v5' = v6'
            and (v5', v3) = (v5', v5')
            in (v5', v2, v3)
      and v' = v3
      and v' = v1'
      and (v', v3) = (v', v')
      and v7' = v1
      and v8' = v2
      and v7' = v7' + v8'
      and v9' = v3
      and v7' = v7' + v9'
      and c' = (True, True, Some v7')
      in (c', v3, v2, v1)
   in res'
      | None -> defaultVal ()
      | Some v -> v
cogent_fam11 : ( U32, U32, U32 ) -> U32
cogent_fam11 (v1
             , v2
             , v3) =
   let ((_, _, res')
       , v2
       , v3
       , v1) = let v1' = 17
      and v' = v1
      and v' = v1'
      and (v', v1) = (v', v')
      and (v', v2, v3) = if v'
         then let v3' = 4
            and v2' = v2
            and v2' = v3'
            and (v2', v2) = (v2', v2')
            in (v2', v2, v3)
         else let v5' = 0
            and v4' = v3
            and v4' = v5'
            and (v4', v3) = (v4', v4')
            in (v4', v2, v3)
      and v6' = v1
      and v' = v' + v6'
      and v7' = v2
      and v' = v' + v7'
      and v8' = v3
      and v' = v' + v8'
      and c' = (True, True, Some v')
      in (c', v2, v3, v1)
   in res'
      | None -> defaultVal ()
      | Some v -> v
