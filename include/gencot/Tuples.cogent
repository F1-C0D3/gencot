{- Auxiliary types for tuples -}

#ifndef GENCOT_TUPLES
#define GENCOT_TUPLES

{- Rationale: In the shallow embedding Cogent generates type names for anonymous tuple types.
   By defining names here, these are used instead generated names in the shallow embedding.
   This makes it possible to use these names in specifications for abstract Gencot functions 
   so that these can be written independent of the specific program. -}
   
{- For pairs Cogent always uses the type name RR in the shallow embedding. -}
type Tup3 t1 t2 t3 = (t1, t2, t3)
type Tup4 t1 t2 t3 t4 = (t1, t2, t3, t4)
type Tup5 t1 t2 t3 t4 t5 = (t1, t2, t3, t4, t5)
type Tup6 t1 t2 t3 t4 t5 t6 = (t1, t2, t3, t4, t5, t6)
type Tup7 t1 t2 t3 t4 t5 t6 t7 = (t1, t2, t3, t4, t5, t6, t7)
type Tup8 t1 t2 t3 t4 t5 t6 t7 t8 = (t1, t2, t3, t4, t5, t6, t7, t8)
type Tup9 t1 t2 t3 t4 t5 t6 t7 t8 t9 = (t1, t2, t3, t4, t5, t6, t7, t8, t9)
{- we may add more, if required. -}

#endif {- GENCOT_TUPLES -}
